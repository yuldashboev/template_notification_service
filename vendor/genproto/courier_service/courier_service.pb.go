// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: courier_service.proto

package courier_service

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCourierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Courier *Courier `protobuf:"bytes,1,opt,name=courier,proto3" json:"courier,omitempty"`
}

func (x *CreateCourierResponse) Reset() {
	*x = CreateCourierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCourierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCourierResponse) ProtoMessage() {}

func (x *CreateCourierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCourierResponse.ProtoReflect.Descriptor instead.
func (*CreateCourierResponse) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCourierResponse) GetCourier() *Courier {
	if x != nil {
		return x.Courier
	}
	return nil
}

type UpdateCourierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Courier *Courier `protobuf:"bytes,1,opt,name=courier,proto3" json:"courier,omitempty"`
}

func (x *UpdateCourierResponse) Reset() {
	*x = UpdateCourierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCourierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCourierResponse) ProtoMessage() {}

func (x *UpdateCourierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCourierResponse.ProtoReflect.Descriptor instead.
func (*UpdateCourierResponse) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateCourierResponse) GetCourier() *Courier {
	if x != nil {
		return x.Courier
	}
	return nil
}

type DeleteCourierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCourierRequest) Reset() {
	*x = DeleteCourierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCourierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCourierRequest) ProtoMessage() {}

func (x *DeleteCourierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCourierRequest.ProtoReflect.Descriptor instead.
func (*DeleteCourierRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteCourierRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCourierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCourierRequest) Reset() {
	*x = GetCourierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourierRequest) ProtoMessage() {}

func (x *GetCourierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourierRequest.ProtoReflect.Descriptor instead.
func (*GetCourierRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetCourierRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCourierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Courier *Courier `protobuf:"bytes,1,opt,name=courier,proto3" json:"courier,omitempty"`
}

func (x *GetCourierResponse) Reset() {
	*x = GetCourierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourierResponse) ProtoMessage() {}

func (x *GetCourierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourierResponse.ProtoReflect.Descriptor instead.
func (*GetCourierResponse) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetCourierResponse) GetCourier() *Courier {
	if x != nil {
		return x.Courier
	}
	return nil
}

type GetAllCouriersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit         uint64   `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page          uint64   `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	ShipperId     string   `protobuf:"bytes,3,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	Search        string   `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	CourierTypeId string   `protobuf:"bytes,5,opt,name=courier_type_id,json=courierTypeId,proto3" json:"courier_type_id,omitempty"`
	IsActive      bool     `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	CourierIds    []string `protobuf:"bytes,7,rep,name=courier_ids,json=courierIds,proto3" json:"courier_ids,omitempty"`
}

func (x *GetAllCouriersRequest) Reset() {
	*x = GetAllCouriersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCouriersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCouriersRequest) ProtoMessage() {}

func (x *GetAllCouriersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCouriersRequest.ProtoReflect.Descriptor instead.
func (*GetAllCouriersRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllCouriersRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAllCouriersRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAllCouriersRequest) GetShipperId() string {
	if x != nil {
		return x.ShipperId
	}
	return ""
}

func (x *GetAllCouriersRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetAllCouriersRequest) GetCourierTypeId() string {
	if x != nil {
		return x.CourierTypeId
	}
	return ""
}

func (x *GetAllCouriersRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *GetAllCouriersRequest) GetCourierIds() []string {
	if x != nil {
		return x.CourierIds
	}
	return nil
}

type GetAllCouriersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Couriers []*Courier `protobuf:"bytes,1,rep,name=couriers,proto3" json:"couriers,omitempty"`
	Count    uint64     `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetAllCouriersResponse) Reset() {
	*x = GetAllCouriersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCouriersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCouriersResponse) ProtoMessage() {}

func (x *GetAllCouriersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCouriersResponse.ProtoReflect.Descriptor instead.
func (*GetAllCouriersResponse) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllCouriersResponse) GetCouriers() []*Courier {
	if x != nil {
		return x.Couriers
	}
	return nil
}

func (x *GetAllCouriersResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetAllClientTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit     int64  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page      int64  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	ShipperId string `protobuf:"bytes,3,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	Search    string `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *GetAllClientTypesRequest) Reset() {
	*x = GetAllClientTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllClientTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllClientTypesRequest) ProtoMessage() {}

func (x *GetAllClientTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllClientTypesRequest.ProtoReflect.Descriptor instead.
func (*GetAllClientTypesRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetAllClientTypesRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAllClientTypesRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAllClientTypesRequest) GetShipperId() string {
	if x != nil {
		return x.ShipperId
	}
	return ""
}

func (x *GetAllClientTypesRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type GetCourierByPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShipperId string `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	Phone     string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *GetCourierByPhoneRequest) Reset() {
	*x = GetCourierByPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourierByPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourierByPhoneRequest) ProtoMessage() {}

func (x *GetCourierByPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourierByPhoneRequest.ProtoReflect.Descriptor instead.
func (*GetCourierByPhoneRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetCourierByPhoneRequest) GetShipperId() string {
	if x != nil {
		return x.ShipperId
	}
	return ""
}

func (x *GetCourierByPhoneRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type ExistsCourierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShipperId   string `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	PhoneNumber string `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
}

func (x *ExistsCourierRequest) Reset() {
	*x = ExistsCourierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistsCourierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsCourierRequest) ProtoMessage() {}

func (x *ExistsCourierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsCourierRequest.ProtoReflect.Descriptor instead.
func (*ExistsCourierRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{9}
}

func (x *ExistsCourierRequest) GetShipperId() string {
	if x != nil {
		return x.ShipperId
	}
	return ""
}

func (x *ExistsCourierRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type ExistsCourierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *ExistsCourierResponse) Reset() {
	*x = ExistsCourierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistsCourierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsCourierResponse) ProtoMessage() {}

func (x *ExistsCourierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsCourierResponse.ProtoReflect.Descriptor instead.
func (*ExistsCourierResponse) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{10}
}

func (x *ExistsCourierResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type UpdateTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Access string `protobuf:"bytes,2,opt,name=access,proto3" json:"access,omitempty"`
}

func (x *UpdateTokenRequest) Reset() {
	*x = UpdateTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTokenRequest) ProtoMessage() {}

func (x *UpdateTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTokenRequest.ProtoReflect.Descriptor instead.
func (*UpdateTokenRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateTokenRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTokenRequest) GetAccess() string {
	if x != nil {
		return x.Access
	}
	return ""
}

type UpdateFcmTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FcmToken string `protobuf:"bytes,2,opt,name=fcm_token,json=fcmToken,proto3" json:"fcm_token,omitempty"`
}

func (x *UpdateFcmTokenRequest) Reset() {
	*x = UpdateFcmTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFcmTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFcmTokenRequest) ProtoMessage() {}

func (x *UpdateFcmTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFcmTokenRequest.ProtoReflect.Descriptor instead.
func (*UpdateFcmTokenRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateFcmTokenRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateFcmTokenRequest) GetFcmToken() string {
	if x != nil {
		return x.FcmToken
	}
	return ""
}

type UpdateLastSeenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateLastSeenRequest) Reset() {
	*x = UpdateLastSeenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLastSeenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLastSeenRequest) ProtoMessage() {}

func (x *UpdateLastSeenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLastSeenRequest.ProtoReflect.Descriptor instead.
func (*UpdateLastSeenRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateLastSeenRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateLastAcceptTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AcceptTime string `protobuf:"bytes,2,opt,name=accept_time,json=acceptTime,proto3" json:"accept_time,omitempty"`
}

func (x *UpdateLastAcceptTimeRequest) Reset() {
	*x = UpdateLastAcceptTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLastAcceptTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLastAcceptTimeRequest) ProtoMessage() {}

func (x *UpdateLastAcceptTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLastAcceptTimeRequest.ProtoReflect.Descriptor instead.
func (*UpdateLastAcceptTimeRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateLastAcceptTimeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateLastAcceptTimeRequest) GetAcceptTime() string {
	if x != nil {
		return x.AcceptTime
	}
	return ""
}

type GetAllDistributorCouriersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DistributorId string `protobuf:"bytes,1,opt,name=distributor_id,json=distributorId,proto3" json:"distributor_id,omitempty"`
	Limit         uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page          uint64 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetAllDistributorCouriersRequest) Reset() {
	*x = GetAllDistributorCouriersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllDistributorCouriersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllDistributorCouriersRequest) ProtoMessage() {}

func (x *GetAllDistributorCouriersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllDistributorCouriersRequest.ProtoReflect.Descriptor instead.
func (*GetAllDistributorCouriersRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetAllDistributorCouriersRequest) GetDistributorId() string {
	if x != nil {
		return x.DistributorId
	}
	return ""
}

func (x *GetAllDistributorCouriersRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAllDistributorCouriersRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetAllDistributorCouriersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Couriers []*Courier `protobuf:"bytes,1,rep,name=couriers,proto3" json:"couriers,omitempty"`
	Count    uint64     `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetAllDistributorCouriersResponse) Reset() {
	*x = GetAllDistributorCouriersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllDistributorCouriersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllDistributorCouriersResponse) ProtoMessage() {}

func (x *GetAllDistributorCouriersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllDistributorCouriersResponse.ProtoReflect.Descriptor instead.
func (*GetAllDistributorCouriersResponse) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetAllDistributorCouriersResponse) GetCouriers() []*Courier {
	if x != nil {
		return x.Couriers
	}
	return nil
}

func (x *GetAllDistributorCouriersResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type BlockCourierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *BlockCourierRequest) Reset() {
	*x = BlockCourierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockCourierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockCourierRequest) ProtoMessage() {}

func (x *BlockCourierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockCourierRequest.ProtoReflect.Descriptor instead.
func (*BlockCourierRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{17}
}

func (x *BlockCourierRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UnblockCourierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UnblockCourierRequest) Reset() {
	*x = UnblockCourierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnblockCourierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnblockCourierRequest) ProtoMessage() {}

func (x *UnblockCourierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnblockCourierRequest.ProtoReflect.Descriptor instead.
func (*UnblockCourierRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{18}
}

func (x *UnblockCourierRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateCourierDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourierDetails *CourierDetails `protobuf:"bytes,1,opt,name=courier_details,json=courierDetails,proto3" json:"courier_details,omitempty"`
}

func (x *CreateCourierDetailsResponse) Reset() {
	*x = CreateCourierDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCourierDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCourierDetailsResponse) ProtoMessage() {}

func (x *CreateCourierDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCourierDetailsResponse.ProtoReflect.Descriptor instead.
func (*CreateCourierDetailsResponse) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{19}
}

func (x *CreateCourierDetailsResponse) GetCourierDetails() *CourierDetails {
	if x != nil {
		return x.CourierDetails
	}
	return nil
}

type UpdateCourierDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourierDetails *CourierDetails `protobuf:"bytes,1,opt,name=courier_details,json=courierDetails,proto3" json:"courier_details,omitempty"`
}

func (x *UpdateCourierDetailsResponse) Reset() {
	*x = UpdateCourierDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCourierDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCourierDetailsResponse) ProtoMessage() {}

func (x *UpdateCourierDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCourierDetailsResponse.ProtoReflect.Descriptor instead.
func (*UpdateCourierDetailsResponse) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateCourierDetailsResponse) GetCourierDetails() *CourierDetails {
	if x != nil {
		return x.CourierDetails
	}
	return nil
}

type GetCourierDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourierId string `protobuf:"bytes,1,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
}

func (x *GetCourierDetailsRequest) Reset() {
	*x = GetCourierDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourierDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourierDetailsRequest) ProtoMessage() {}

func (x *GetCourierDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourierDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetCourierDetailsRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetCourierDetailsRequest) GetCourierId() string {
	if x != nil {
		return x.CourierId
	}
	return ""
}

type GetCourierDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourierDetails *CourierDetails `protobuf:"bytes,1,opt,name=courier_details,json=courierDetails,proto3" json:"courier_details,omitempty"`
}

func (x *GetCourierDetailsResponse) Reset() {
	*x = GetCourierDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourierDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourierDetailsResponse) ProtoMessage() {}

func (x *GetCourierDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourierDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetCourierDetailsResponse) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetCourierDetailsResponse) GetCourierDetails() *CourierDetails {
	if x != nil {
		return x.CourierDetails
	}
	return nil
}

type CreateCourierVehicleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourierVehicle *CourierVehicle `protobuf:"bytes,1,opt,name=courier_vehicle,json=courierVehicle,proto3" json:"courier_vehicle,omitempty"`
}

func (x *CreateCourierVehicleResponse) Reset() {
	*x = CreateCourierVehicleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCourierVehicleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCourierVehicleResponse) ProtoMessage() {}

func (x *CreateCourierVehicleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCourierVehicleResponse.ProtoReflect.Descriptor instead.
func (*CreateCourierVehicleResponse) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{23}
}

func (x *CreateCourierVehicleResponse) GetCourierVehicle() *CourierVehicle {
	if x != nil {
		return x.CourierVehicle
	}
	return nil
}

type UpdateCourierVehicleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourierVehicle *CourierVehicle `protobuf:"bytes,1,opt,name=courier_vehicle,json=courierVehicle,proto3" json:"courier_vehicle,omitempty"`
}

func (x *UpdateCourierVehicleResponse) Reset() {
	*x = UpdateCourierVehicleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCourierVehicleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCourierVehicleResponse) ProtoMessage() {}

func (x *UpdateCourierVehicleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCourierVehicleResponse.ProtoReflect.Descriptor instead.
func (*UpdateCourierVehicleResponse) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateCourierVehicleResponse) GetCourierVehicle() *CourierVehicle {
	if x != nil {
		return x.CourierVehicle
	}
	return nil
}

type GetCourierVehicleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCourierVehicleRequest) Reset() {
	*x = GetCourierVehicleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourierVehicleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourierVehicleRequest) ProtoMessage() {}

func (x *GetCourierVehicleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourierVehicleRequest.ProtoReflect.Descriptor instead.
func (*GetCourierVehicleRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{25}
}

func (x *GetCourierVehicleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCourierVehicleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourierVehicle *CourierVehicle `protobuf:"bytes,1,opt,name=courier_vehicle,json=courierVehicle,proto3" json:"courier_vehicle,omitempty"`
}

func (x *GetCourierVehicleResponse) Reset() {
	*x = GetCourierVehicleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourierVehicleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourierVehicleResponse) ProtoMessage() {}

func (x *GetCourierVehicleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourierVehicleResponse.ProtoReflect.Descriptor instead.
func (*GetCourierVehicleResponse) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetCourierVehicleResponse) GetCourierVehicle() *CourierVehicle {
	if x != nil {
		return x.CourierVehicle
	}
	return nil
}

type GetAllCourierVehiclesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourierId string `protobuf:"bytes,1,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
}

func (x *GetAllCourierVehiclesRequest) Reset() {
	*x = GetAllCourierVehiclesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCourierVehiclesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCourierVehiclesRequest) ProtoMessage() {}

func (x *GetAllCourierVehiclesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCourierVehiclesRequest.ProtoReflect.Descriptor instead.
func (*GetAllCourierVehiclesRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{27}
}

func (x *GetAllCourierVehiclesRequest) GetCourierId() string {
	if x != nil {
		return x.CourierId
	}
	return ""
}

type GetAllCourierVehiclesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourierVehicles []*CourierVehicle `protobuf:"bytes,1,rep,name=courier_vehicles,json=courierVehicles,proto3" json:"courier_vehicles,omitempty"`
}

func (x *GetAllCourierVehiclesResponse) Reset() {
	*x = GetAllCourierVehiclesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCourierVehiclesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCourierVehiclesResponse) ProtoMessage() {}

func (x *GetAllCourierVehiclesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCourierVehiclesResponse.ProtoReflect.Descriptor instead.
func (*GetAllCourierVehiclesResponse) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{28}
}

func (x *GetAllCourierVehiclesResponse) GetCourierVehicles() []*CourierVehicle {
	if x != nil {
		return x.CourierVehicles
	}
	return nil
}

type DeleteCourierVehicleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCourierVehicleRequest) Reset() {
	*x = DeleteCourierVehicleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCourierVehicleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCourierVehicleRequest) ProtoMessage() {}

func (x *DeleteCourierVehicleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCourierVehicleRequest.ProtoReflect.Descriptor instead.
func (*DeleteCourierVehicleRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteCourierVehicleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SearchCouriersByPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone     string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	ShipperId string `protobuf:"bytes,2,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
}

func (x *SearchCouriersByPhoneRequest) Reset() {
	*x = SearchCouriersByPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCouriersByPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCouriersByPhoneRequest) ProtoMessage() {}

func (x *SearchCouriersByPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCouriersByPhoneRequest.ProtoReflect.Descriptor instead.
func (*SearchCouriersByPhoneRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{30}
}

func (x *SearchCouriersByPhoneRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SearchCouriersByPhoneRequest) GetShipperId() string {
	if x != nil {
		return x.ShipperId
	}
	return ""
}

type SearchCouriersByPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Couriers []*Courier `protobuf:"bytes,1,rep,name=couriers,proto3" json:"couriers,omitempty"`
}

func (x *SearchCouriersByPhoneResponse) Reset() {
	*x = SearchCouriersByPhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCouriersByPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCouriersByPhoneResponse) ProtoMessage() {}

func (x *SearchCouriersByPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCouriersByPhoneResponse.ProtoReflect.Descriptor instead.
func (*SearchCouriersByPhoneResponse) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{31}
}

func (x *SearchCouriersByPhoneResponse) GetCouriers() []*Courier {
	if x != nil {
		return x.Couriers
	}
	return nil
}

type CreateBranchCourierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId  string `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	CourierId string `protobuf:"bytes,2,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
}

func (x *CreateBranchCourierRequest) Reset() {
	*x = CreateBranchCourierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBranchCourierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBranchCourierRequest) ProtoMessage() {}

func (x *CreateBranchCourierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBranchCourierRequest.ProtoReflect.Descriptor instead.
func (*CreateBranchCourierRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{32}
}

func (x *CreateBranchCourierRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *CreateBranchCourierRequest) GetCourierId() string {
	if x != nil {
		return x.CourierId
	}
	return ""
}

type GetAllBranchCouriersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId      string `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	Limit         uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page          uint64 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	StartDate     string `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       string `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Search        string `protobuf:"bytes,6,opt,name=search,proto3" json:"search,omitempty"`
	CourierTypeId string `protobuf:"bytes,7,opt,name=courier_type_id,json=courierTypeId,proto3" json:"courier_type_id,omitempty"`
}

func (x *GetAllBranchCouriersRequest) Reset() {
	*x = GetAllBranchCouriersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllBranchCouriersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllBranchCouriersRequest) ProtoMessage() {}

func (x *GetAllBranchCouriersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllBranchCouriersRequest.ProtoReflect.Descriptor instead.
func (*GetAllBranchCouriersRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{33}
}

func (x *GetAllBranchCouriersRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *GetAllBranchCouriersRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAllBranchCouriersRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAllBranchCouriersRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetAllBranchCouriersRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *GetAllBranchCouriersRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetAllBranchCouriersRequest) GetCourierTypeId() string {
	if x != nil {
		return x.CourierTypeId
	}
	return ""
}

type GetAllBranchCouriersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Couriers []*Courier `protobuf:"bytes,1,rep,name=couriers,proto3" json:"couriers,omitempty"`
	Count    uint64     `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetAllBranchCouriersResponse) Reset() {
	*x = GetAllBranchCouriersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllBranchCouriersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllBranchCouriersResponse) ProtoMessage() {}

func (x *GetAllBranchCouriersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllBranchCouriersResponse.ProtoReflect.Descriptor instead.
func (*GetAllBranchCouriersResponse) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{34}
}

func (x *GetAllBranchCouriersResponse) GetCouriers() []*Courier {
	if x != nil {
		return x.Couriers
	}
	return nil
}

func (x *GetAllBranchCouriersResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetAllCourierBranchesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourierId string `protobuf:"bytes,1,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
}

func (x *GetAllCourierBranchesRequest) Reset() {
	*x = GetAllCourierBranchesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCourierBranchesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCourierBranchesRequest) ProtoMessage() {}

func (x *GetAllCourierBranchesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCourierBranchesRequest.ProtoReflect.Descriptor instead.
func (*GetAllCourierBranchesRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{35}
}

func (x *GetAllCourierBranchesRequest) GetCourierId() string {
	if x != nil {
		return x.CourierId
	}
	return ""
}

type GetAllCourierBranchesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchIds []string `protobuf:"bytes,1,rep,name=branch_ids,json=branchIds,proto3" json:"branch_ids,omitempty"`
}

func (x *GetAllCourierBranchesResponse) Reset() {
	*x = GetAllCourierBranchesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCourierBranchesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCourierBranchesResponse) ProtoMessage() {}

func (x *GetAllCourierBranchesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCourierBranchesResponse.ProtoReflect.Descriptor instead.
func (*GetAllCourierBranchesResponse) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{36}
}

func (x *GetAllCourierBranchesResponse) GetBranchIds() []string {
	if x != nil {
		return x.BranchIds
	}
	return nil
}

type DeleteBranchCourierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId  string `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	CourierId string `protobuf:"bytes,2,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
}

func (x *DeleteBranchCourierRequest) Reset() {
	*x = DeleteBranchCourierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBranchCourierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBranchCourierRequest) ProtoMessage() {}

func (x *DeleteBranchCourierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBranchCourierRequest.ProtoReflect.Descriptor instead.
func (*DeleteBranchCourierRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{37}
}

func (x *DeleteBranchCourierRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *DeleteBranchCourierRequest) GetCourierId() string {
	if x != nil {
		return x.CourierId
	}
	return ""
}

type GetCourierActiveVehicleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourierId string `protobuf:"bytes,1,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
}

func (x *GetCourierActiveVehicleRequest) Reset() {
	*x = GetCourierActiveVehicleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourierActiveVehicleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourierActiveVehicleRequest) ProtoMessage() {}

func (x *GetCourierActiveVehicleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourierActiveVehicleRequest.ProtoReflect.Descriptor instead.
func (*GetCourierActiveVehicleRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{38}
}

func (x *GetCourierActiveVehicleRequest) GetCourierId() string {
	if x != nil {
		return x.CourierId
	}
	return ""
}

type DeleteFcmTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteFcmTokenRequest) Reset() {
	*x = DeleteFcmTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFcmTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFcmTokenRequest) ProtoMessage() {}

func (x *DeleteFcmTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFcmTokenRequest.ProtoReflect.Descriptor instead.
func (*DeleteFcmTokenRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteFcmTokenRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateCourierIsWorkingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourierId string `protobuf:"bytes,1,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
	IsWorking bool   `protobuf:"varint,2,opt,name=is_working,json=isWorking,proto3" json:"is_working,omitempty"`
}

func (x *UpdateCourierIsWorkingRequest) Reset() {
	*x = UpdateCourierIsWorkingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCourierIsWorkingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCourierIsWorkingRequest) ProtoMessage() {}

func (x *UpdateCourierIsWorkingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCourierIsWorkingRequest.ProtoReflect.Descriptor instead.
func (*UpdateCourierIsWorkingRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateCourierIsWorkingRequest) GetCourierId() string {
	if x != nil {
		return x.CourierId
	}
	return ""
}

func (x *UpdateCourierIsWorkingRequest) GetIsWorking() bool {
	if x != nil {
		return x.IsWorking
	}
	return false
}

type GetAllCourierAttendanceTimesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourierId string `protobuf:"bytes,1,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
	FromDate  string `protobuf:"bytes,2,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`
	ToDate    string `protobuf:"bytes,3,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`
}

func (x *GetAllCourierAttendanceTimesRequest) Reset() {
	*x = GetAllCourierAttendanceTimesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCourierAttendanceTimesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCourierAttendanceTimesRequest) ProtoMessage() {}

func (x *GetAllCourierAttendanceTimesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCourierAttendanceTimesRequest.ProtoReflect.Descriptor instead.
func (*GetAllCourierAttendanceTimesRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{41}
}

func (x *GetAllCourierAttendanceTimesRequest) GetCourierId() string {
	if x != nil {
		return x.CourierId
	}
	return ""
}

func (x *GetAllCourierAttendanceTimesRequest) GetFromDate() string {
	if x != nil {
		return x.FromDate
	}
	return ""
}

func (x *GetAllCourierAttendanceTimesRequest) GetToDate() string {
	if x != nil {
		return x.ToDate
	}
	return ""
}

type GetAllCourierAttendanceTimesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourierAttendanceTimes []*CourierAttendanceTime `protobuf:"bytes,1,rep,name=courier_attendance_times,json=courierAttendanceTimes,proto3" json:"courier_attendance_times,omitempty"`
}

func (x *GetAllCourierAttendanceTimesResponse) Reset() {
	*x = GetAllCourierAttendanceTimesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCourierAttendanceTimesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCourierAttendanceTimesResponse) ProtoMessage() {}

func (x *GetAllCourierAttendanceTimesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCourierAttendanceTimesResponse.ProtoReflect.Descriptor instead.
func (*GetAllCourierAttendanceTimesResponse) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{42}
}

func (x *GetAllCourierAttendanceTimesResponse) GetCourierAttendanceTimes() []*CourierAttendanceTime {
	if x != nil {
		return x.CourierAttendanceTimes
	}
	return nil
}

type GetAllCouriersPhonesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShipperId string `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
}

func (x *GetAllCouriersPhonesRequest) Reset() {
	*x = GetAllCouriersPhonesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCouriersPhonesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCouriersPhonesRequest) ProtoMessage() {}

func (x *GetAllCouriersPhonesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCouriersPhonesRequest.ProtoReflect.Descriptor instead.
func (*GetAllCouriersPhonesRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{43}
}

func (x *GetAllCouriersPhonesRequest) GetShipperId() string {
	if x != nil {
		return x.ShipperId
	}
	return ""
}

type GetAllCouriersPhonesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phones []string `protobuf:"bytes,1,rep,name=phones,proto3" json:"phones,omitempty"`
}

func (x *GetAllCouriersPhonesResponse) Reset() {
	*x = GetAllCouriersPhonesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCouriersPhonesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCouriersPhonesResponse) ProtoMessage() {}

func (x *GetAllCouriersPhonesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCouriersPhonesResponse.ProtoReflect.Descriptor instead.
func (*GetAllCouriersPhonesResponse) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{44}
}

func (x *GetAllCouriersPhonesResponse) GetPhones() []string {
	if x != nil {
		return x.Phones
	}
	return nil
}

type GetAllGetAllCouriersFmcTokensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShipperId    string   `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	ReceiversIds []string `protobuf:"bytes,2,rep,name=receivers_ids,json=receiversIds,proto3" json:"receivers_ids,omitempty"`
}

func (x *GetAllGetAllCouriersFmcTokensRequest) Reset() {
	*x = GetAllGetAllCouriersFmcTokensRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGetAllCouriersFmcTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGetAllCouriersFmcTokensRequest) ProtoMessage() {}

func (x *GetAllGetAllCouriersFmcTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGetAllCouriersFmcTokensRequest.ProtoReflect.Descriptor instead.
func (*GetAllGetAllCouriersFmcTokensRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{45}
}

func (x *GetAllGetAllCouriersFmcTokensRequest) GetShipperId() string {
	if x != nil {
		return x.ShipperId
	}
	return ""
}

func (x *GetAllGetAllCouriersFmcTokensRequest) GetReceiversIds() []string {
	if x != nil {
		return x.ReceiversIds
	}
	return nil
}

type GetAllCouriersFmcTokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []string `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *GetAllCouriersFmcTokensResponse) Reset() {
	*x = GetAllCouriersFmcTokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCouriersFmcTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCouriersFmcTokensResponse) ProtoMessage() {}

func (x *GetAllCouriersFmcTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCouriersFmcTokensResponse.ProtoReflect.Descriptor instead.
func (*GetAllCouriersFmcTokensResponse) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{46}
}

func (x *GetAllCouriersFmcTokensResponse) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type UpdateCouriersMaxOrdersCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShipperId      string `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	MaxOrdersCount int64  `protobuf:"varint,2,opt,name=max_orders_count,json=maxOrdersCount,proto3" json:"max_orders_count,omitempty"`
}

func (x *UpdateCouriersMaxOrdersCountRequest) Reset() {
	*x = UpdateCouriersMaxOrdersCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCouriersMaxOrdersCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCouriersMaxOrdersCountRequest) ProtoMessage() {}

func (x *UpdateCouriersMaxOrdersCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCouriersMaxOrdersCountRequest.ProtoReflect.Descriptor instead.
func (*UpdateCouriersMaxOrdersCountRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{47}
}

func (x *UpdateCouriersMaxOrdersCountRequest) GetShipperId() string {
	if x != nil {
		return x.ShipperId
	}
	return ""
}

func (x *UpdateCouriersMaxOrdersCountRequest) GetMaxOrdersCount() int64 {
	if x != nil {
		return x.MaxOrdersCount
	}
	return 0
}

type UpdateIikoCourierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShipperId string `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	IikoId    string `protobuf:"bytes,3,opt,name=iiko_id,json=iikoId,proto3" json:"iiko_id,omitempty"`
}

func (x *UpdateIikoCourierRequest) Reset() {
	*x = UpdateIikoCourierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_courier_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIikoCourierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIikoCourierRequest) ProtoMessage() {}

func (x *UpdateIikoCourierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_courier_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIikoCourierRequest.ProtoReflect.Descriptor instead.
func (*UpdateIikoCourierRequest) Descriptor() ([]byte, []int) {
	return file_courier_service_proto_rawDescGZIP(), []int{48}
}

func (x *UpdateIikoCourierRequest) GetShipperId() string {
	if x != nil {
		return x.ShipperId
	}
	return ""
}

func (x *UpdateIikoCourierRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateIikoCourierRequest) GetIikoId() string {
	if x != nil {
		return x.IikoId
	}
	return ""
}

var File_courier_service_proto protoreflect.FileDescriptor

var file_courier_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d,
	0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x44, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x22, 0x44, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x22, 0xde, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x5d, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7b, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x4f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x58, 0x0a, 0x14, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0x2f, 0x0a, 0x15, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x22, 0x3c, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x44, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x63, 0x6d, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x63, 0x6d,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x63,
	0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x27, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x4e, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x73, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x22, 0x68, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x08,
	0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x25,
	0x0a, 0x13, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x15, 0x55, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x61,
	0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x61, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x41, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x22, 0x39, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x5e, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0f,
	0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x0e, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x61, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x41, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x22, 0x61, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x76, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x22, 0x2a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x5e, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x22, 0x3d, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x64, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x10, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x22, 0x2d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x1c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x1d, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x42, 0x79, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x63,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x22, 0x58, 0x0a, 0x1a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xde, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x26, 0x0a,
	0x0f, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3d, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x73, 0x22, 0x58, 0x0a, 0x1a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x63,
	0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5d, 0x0a,
	0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x49, 0x73,
	0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0x7a, 0x0a, 0x23,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x74, 0x74,
	0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64,
	0x61, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x18, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74,
	0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x16, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x74, 0x74,
	0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x73, 0x22, 0x6a, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x46, 0x6d, 0x63, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x49, 0x64, 0x73, 0x22, 0x39,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73,
	0x46, 0x6d, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x6e, 0x0a, 0x23, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x4d, 0x61, 0x78, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x62, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x69, 0x6b, 0x6f, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x69, 0x6b, 0x6f, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x69, 0x6b, 0x6f, 0x49, 0x64, 0x32, 0xdb, 0x24,
	0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x3e, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x1a, 0x1f, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3e, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x1a, 0x1f, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x49, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x12, 0x1b,
	0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x1b, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x53, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x57, 0x69, 0x74,
	0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x12, 0x1e, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x43,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x43,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x59, 0x0a, 0x14, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x22, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x43, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x43,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x42, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4b,
	0x0a, 0x0e, 0x55, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x12, 0x1f, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x2e, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x63, 0x6d, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x63, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x4b, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x63, 0x6d, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1f, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x63, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x12, 0x1f,
	0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x25, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x5a, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x2e, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x1a, 0x26, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x1a, 0x26, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x22, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x12, 0x18, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x1a, 0x26, 0x2e, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x18,
	0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x1a, 0x26, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x25, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x12, 0x28, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x26, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x42, 0x79, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x73, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x73, 0x12, 0x25, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x12, 0x26, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x55, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x43,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x49, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x12, 0x27, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x49, 0x73, 0x57, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x2e, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x22, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x2e, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x1a, 0x15, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x15, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x17, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x1b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x74, 0x74, 0x65,
	0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x74, 0x74,
	0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x21, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x74,
	0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x00,
	0x12, 0x7f, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x12, 0x2d, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61,
	0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e,
	0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x66, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x12, 0x17, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x1a, 0x19, 0x2e, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x49, 0x64, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x73, 0x4d, 0x61, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x73, 0x4d, 0x61, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x26, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x73, 0x4d, 0x61, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x42, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x42, 0x79, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x42, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x73, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x46, 0x6d, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x12, 0x2e, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73,
	0x46, 0x6d, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x46, 0x6d, 0x63, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a,
	0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x4d,
	0x61, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x4d, 0x61, 0x78, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x12, 0x22, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x69, 0x6b, 0x6f, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x69, 0x6b,
	0x6f, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x42, 0x79, 0x43, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x1b,
	0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1a, 0x5a, 0x18, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_courier_service_proto_rawDescOnce sync.Once
	file_courier_service_proto_rawDescData = file_courier_service_proto_rawDesc
)

func file_courier_service_proto_rawDescGZIP() []byte {
	file_courier_service_proto_rawDescOnce.Do(func() {
		file_courier_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_courier_service_proto_rawDescData)
	})
	return file_courier_service_proto_rawDescData
}

var file_courier_service_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_courier_service_proto_goTypes = []interface{}{
	(*CreateCourierResponse)(nil),                // 0: genproto.CreateCourierResponse
	(*UpdateCourierResponse)(nil),                // 1: genproto.UpdateCourierResponse
	(*DeleteCourierRequest)(nil),                 // 2: genproto.DeleteCourierRequest
	(*GetCourierRequest)(nil),                    // 3: genproto.GetCourierRequest
	(*GetCourierResponse)(nil),                   // 4: genproto.GetCourierResponse
	(*GetAllCouriersRequest)(nil),                // 5: genproto.GetAllCouriersRequest
	(*GetAllCouriersResponse)(nil),               // 6: genproto.GetAllCouriersResponse
	(*GetAllClientTypesRequest)(nil),             // 7: genproto.GetAllClientTypesRequest
	(*GetCourierByPhoneRequest)(nil),             // 8: genproto.GetCourierByPhoneRequest
	(*ExistsCourierRequest)(nil),                 // 9: genproto.ExistsCourierRequest
	(*ExistsCourierResponse)(nil),                // 10: genproto.ExistsCourierResponse
	(*UpdateTokenRequest)(nil),                   // 11: genproto.UpdateTokenRequest
	(*UpdateFcmTokenRequest)(nil),                // 12: genproto.UpdateFcmTokenRequest
	(*UpdateLastSeenRequest)(nil),                // 13: genproto.UpdateLastSeenRequest
	(*UpdateLastAcceptTimeRequest)(nil),          // 14: genproto.UpdateLastAcceptTimeRequest
	(*GetAllDistributorCouriersRequest)(nil),     // 15: genproto.GetAllDistributorCouriersRequest
	(*GetAllDistributorCouriersResponse)(nil),    // 16: genproto.GetAllDistributorCouriersResponse
	(*BlockCourierRequest)(nil),                  // 17: genproto.BlockCourierRequest
	(*UnblockCourierRequest)(nil),                // 18: genproto.UnblockCourierRequest
	(*CreateCourierDetailsResponse)(nil),         // 19: genproto.CreateCourierDetailsResponse
	(*UpdateCourierDetailsResponse)(nil),         // 20: genproto.UpdateCourierDetailsResponse
	(*GetCourierDetailsRequest)(nil),             // 21: genproto.GetCourierDetailsRequest
	(*GetCourierDetailsResponse)(nil),            // 22: genproto.GetCourierDetailsResponse
	(*CreateCourierVehicleResponse)(nil),         // 23: genproto.CreateCourierVehicleResponse
	(*UpdateCourierVehicleResponse)(nil),         // 24: genproto.UpdateCourierVehicleResponse
	(*GetCourierVehicleRequest)(nil),             // 25: genproto.GetCourierVehicleRequest
	(*GetCourierVehicleResponse)(nil),            // 26: genproto.GetCourierVehicleResponse
	(*GetAllCourierVehiclesRequest)(nil),         // 27: genproto.GetAllCourierVehiclesRequest
	(*GetAllCourierVehiclesResponse)(nil),        // 28: genproto.GetAllCourierVehiclesResponse
	(*DeleteCourierVehicleRequest)(nil),          // 29: genproto.DeleteCourierVehicleRequest
	(*SearchCouriersByPhoneRequest)(nil),         // 30: genproto.SearchCouriersByPhoneRequest
	(*SearchCouriersByPhoneResponse)(nil),        // 31: genproto.SearchCouriersByPhoneResponse
	(*CreateBranchCourierRequest)(nil),           // 32: genproto.CreateBranchCourierRequest
	(*GetAllBranchCouriersRequest)(nil),          // 33: genproto.GetAllBranchCouriersRequest
	(*GetAllBranchCouriersResponse)(nil),         // 34: genproto.GetAllBranchCouriersResponse
	(*GetAllCourierBranchesRequest)(nil),         // 35: genproto.GetAllCourierBranchesRequest
	(*GetAllCourierBranchesResponse)(nil),        // 36: genproto.GetAllCourierBranchesResponse
	(*DeleteBranchCourierRequest)(nil),           // 37: genproto.DeleteBranchCourierRequest
	(*GetCourierActiveVehicleRequest)(nil),       // 38: genproto.GetCourierActiveVehicleRequest
	(*DeleteFcmTokenRequest)(nil),                // 39: genproto.DeleteFcmTokenRequest
	(*UpdateCourierIsWorkingRequest)(nil),        // 40: genproto.UpdateCourierIsWorkingRequest
	(*GetAllCourierAttendanceTimesRequest)(nil),  // 41: genproto.GetAllCourierAttendanceTimesRequest
	(*GetAllCourierAttendanceTimesResponse)(nil), // 42: genproto.GetAllCourierAttendanceTimesResponse
	(*GetAllCouriersPhonesRequest)(nil),          // 43: genproto.GetAllCouriersPhonesRequest
	(*GetAllCouriersPhonesResponse)(nil),         // 44: genproto.GetAllCouriersPhonesResponse
	(*GetAllGetAllCouriersFmcTokensRequest)(nil), // 45: genproto.GetAllGetAllCouriersFmcTokensRequest
	(*GetAllCouriersFmcTokensResponse)(nil),      // 46: genproto.GetAllCouriersFmcTokensResponse
	(*UpdateCouriersMaxOrdersCountRequest)(nil),  // 47: genproto.UpdateCouriersMaxOrdersCountRequest
	(*UpdateIikoCourierRequest)(nil),             // 48: genproto.UpdateIikoCourierRequest
	(*Courier)(nil),                              // 49: genproto.Courier
	(*CourierDetails)(nil),                       // 50: genproto.CourierDetails
	(*CourierVehicle)(nil),                       // 51: genproto.CourierVehicle
	(*CourierAttendanceTime)(nil),                // 52: genproto.CourierAttendanceTime
	(*CreateCourierTypeRequest)(nil),             // 53: genproto.CreateCourierTypeRequest
	(*CourierTypeId)(nil),                        // 54: genproto.CourierTypeId
	(*CourierType)(nil),                          // 55: genproto.CourierType
	(*CourierBranch)(nil),                        // 56: genproto.CourierBranch
	(*AddCouriersMaxOrders)(nil),                 // 57: genproto.AddCouriersMaxOrders
	(*GetAllCouriersByBranchesRequest)(nil),      // 58: genproto.GetAllCouriersByBranchesRequest
	(*GetOnlineCouriersRequest)(nil),             // 59: genproto.GetOnlineCouriersRequest
	(*empty.Empty)(nil),                          // 60: google.protobuf.Empty
	(*GetAllClientTypesResponse)(nil),            // 61: genproto.GetAllClientTypesResponse
	(*CourierAttendanceTimeId)(nil),              // 62: genproto.CourierAttendanceTimeId
	(*CouriersArchiveReportResponse)(nil),        // 63: genproto.CouriersArchiveReportResponse
	(*CourierBranchId)(nil),                      // 64: genproto.CourierBranchId
	(*AddCouriersMaxOrdersResponse)(nil),         // 65: genproto.AddCouriersMaxOrdersResponse
	(*GetAllCouriersByBranchesResponse)(nil),     // 66: genproto.GetAllCouriersByBranchesResponse
	(*GetOnlineCouriersResponse)(nil),            // 67: genproto.GetOnlineCouriersResponse
}
var file_courier_service_proto_depIdxs = []int32{
	49, // 0: genproto.CreateCourierResponse.courier:type_name -> genproto.Courier
	49, // 1: genproto.UpdateCourierResponse.courier:type_name -> genproto.Courier
	49, // 2: genproto.GetCourierResponse.courier:type_name -> genproto.Courier
	49, // 3: genproto.GetAllCouriersResponse.couriers:type_name -> genproto.Courier
	49, // 4: genproto.GetAllDistributorCouriersResponse.couriers:type_name -> genproto.Courier
	50, // 5: genproto.CreateCourierDetailsResponse.courier_details:type_name -> genproto.CourierDetails
	50, // 6: genproto.UpdateCourierDetailsResponse.courier_details:type_name -> genproto.CourierDetails
	50, // 7: genproto.GetCourierDetailsResponse.courier_details:type_name -> genproto.CourierDetails
	51, // 8: genproto.CreateCourierVehicleResponse.courier_vehicle:type_name -> genproto.CourierVehicle
	51, // 9: genproto.UpdateCourierVehicleResponse.courier_vehicle:type_name -> genproto.CourierVehicle
	51, // 10: genproto.GetCourierVehicleResponse.courier_vehicle:type_name -> genproto.CourierVehicle
	51, // 11: genproto.GetAllCourierVehiclesResponse.courier_vehicles:type_name -> genproto.CourierVehicle
	49, // 12: genproto.SearchCouriersByPhoneResponse.couriers:type_name -> genproto.Courier
	49, // 13: genproto.GetAllBranchCouriersResponse.couriers:type_name -> genproto.Courier
	52, // 14: genproto.GetAllCourierAttendanceTimesResponse.courier_attendance_times:type_name -> genproto.CourierAttendanceTime
	49, // 15: genproto.CourierService.Create:input_type -> genproto.Courier
	49, // 16: genproto.CourierService.Update:input_type -> genproto.Courier
	3,  // 17: genproto.CourierService.GetCourier:input_type -> genproto.GetCourierRequest
	3,  // 18: genproto.CourierService.GetCourierForReport:input_type -> genproto.GetCourierRequest
	3,  // 19: genproto.CourierService.GetCourierWithDelete:input_type -> genproto.GetCourierRequest
	5,  // 20: genproto.CourierService.GetAllCouriers:input_type -> genproto.GetAllCouriersRequest
	5,  // 21: genproto.CourierService.GetAllCouriersWithDelete:input_type -> genproto.GetAllCouriersRequest
	9,  // 22: genproto.CourierService.ExistsCourier:input_type -> genproto.ExistsCourierRequest
	9,  // 23: genproto.CourierService.ExistsDeletedCourier:input_type -> genproto.ExistsCourierRequest
	8,  // 24: genproto.CourierService.GetCourierByPhone:input_type -> genproto.GetCourierByPhoneRequest
	15, // 25: genproto.CourierService.GetAllDistributorCouriers:input_type -> genproto.GetAllDistributorCouriersRequest
	2,  // 26: genproto.CourierService.Delete:input_type -> genproto.DeleteCourierRequest
	17, // 27: genproto.CourierService.BlockCourier:input_type -> genproto.BlockCourierRequest
	18, // 28: genproto.CourierService.UnblockCourier:input_type -> genproto.UnblockCourierRequest
	11, // 29: genproto.CourierService.UpdateToken:input_type -> genproto.UpdateTokenRequest
	12, // 30: genproto.CourierService.UpdateFcmToken:input_type -> genproto.UpdateFcmTokenRequest
	39, // 31: genproto.CourierService.DeleteFcmToken:input_type -> genproto.DeleteFcmTokenRequest
	13, // 32: genproto.CourierService.UpdateLastSeen:input_type -> genproto.UpdateLastSeenRequest
	14, // 33: genproto.CourierService.UpdateLastAcceptTime:input_type -> genproto.UpdateLastAcceptTimeRequest
	50, // 34: genproto.CourierService.CreateCourierDetails:input_type -> genproto.CourierDetails
	50, // 35: genproto.CourierService.UpdateCourierDetails:input_type -> genproto.CourierDetails
	21, // 36: genproto.CourierService.GetCourierDetails:input_type -> genproto.GetCourierDetailsRequest
	51, // 37: genproto.CourierService.CreateCourierVehicle:input_type -> genproto.CourierVehicle
	51, // 38: genproto.CourierService.UpdateCourierVehicle:input_type -> genproto.CourierVehicle
	25, // 39: genproto.CourierService.GetCourierVehicle:input_type -> genproto.GetCourierVehicleRequest
	27, // 40: genproto.CourierService.GetAllCourierVehicles:input_type -> genproto.GetAllCourierVehiclesRequest
	29, // 41: genproto.CourierService.DeleteCourierVehicle:input_type -> genproto.DeleteCourierVehicleRequest
	38, // 42: genproto.CourierService.GetCourierActiveVehicle:input_type -> genproto.GetCourierActiveVehicleRequest
	30, // 43: genproto.CourierService.SearchCouriersByPhone:input_type -> genproto.SearchCouriersByPhoneRequest
	32, // 44: genproto.CourierService.CreateBranchCourier:input_type -> genproto.CreateBranchCourierRequest
	33, // 45: genproto.CourierService.GetAllBranchCouriers:input_type -> genproto.GetAllBranchCouriersRequest
	35, // 46: genproto.CourierService.GetAllCourierBranches:input_type -> genproto.GetAllCourierBranchesRequest
	37, // 47: genproto.CourierService.DeleteBranchCourier:input_type -> genproto.DeleteBranchCourierRequest
	40, // 48: genproto.CourierService.UpdateCourierIsWorking:input_type -> genproto.UpdateCourierIsWorkingRequest
	53, // 49: genproto.CourierService.CreateCourierType:input_type -> genproto.CreateCourierTypeRequest
	7,  // 50: genproto.CourierService.GetAllClientTypes:input_type -> genproto.GetAllClientTypesRequest
	54, // 51: genproto.CourierService.GetCourierType:input_type -> genproto.CourierTypeId
	55, // 52: genproto.CourierService.UpdateCourierType:input_type -> genproto.CourierType
	54, // 53: genproto.CourierService.DeleteCourierType:input_type -> genproto.CourierTypeId
	52, // 54: genproto.CourierService.CreateCourierAttendanceTime:input_type -> genproto.CourierAttendanceTime
	41, // 55: genproto.CourierService.GetAllCourierAttendanceTimes:input_type -> genproto.GetAllCourierAttendanceTimesRequest
	5,  // 56: genproto.CourierService.GetCouriersArchiveReport:input_type -> genproto.GetAllCouriersRequest
	56, // 57: genproto.CourierService.UpdateCourierBranch:input_type -> genproto.CourierBranch
	57, // 58: genproto.CourierService.AddCouriersMaxOrder:input_type -> genproto.AddCouriersMaxOrders
	58, // 59: genproto.CourierService.GetAllCouriersByBranches:input_type -> genproto.GetAllCouriersByBranchesRequest
	5,  // 60: genproto.CourierService.GetAllCouriersLimitless:input_type -> genproto.GetAllCouriersRequest
	43, // 61: genproto.CourierService.GetAllCouriersPhones:input_type -> genproto.GetAllCouriersPhonesRequest
	45, // 62: genproto.CourierService.GetAllCouriersFmcTokens:input_type -> genproto.GetAllGetAllCouriersFmcTokensRequest
	47, // 63: genproto.CourierService.UpdateCouriersMaxOrdersCount:input_type -> genproto.UpdateCouriersMaxOrdersCountRequest
	59, // 64: genproto.CourierService.GetOnlineCouriers:input_type -> genproto.GetOnlineCouriersRequest
	48, // 65: genproto.CourierService.UpdateIikoCourier:input_type -> genproto.UpdateIikoCourierRequest
	3,  // 66: genproto.CourierService.GetCourierByCrmID:input_type -> genproto.GetCourierRequest
	0,  // 67: genproto.CourierService.Create:output_type -> genproto.CreateCourierResponse
	1,  // 68: genproto.CourierService.Update:output_type -> genproto.UpdateCourierResponse
	4,  // 69: genproto.CourierService.GetCourier:output_type -> genproto.GetCourierResponse
	4,  // 70: genproto.CourierService.GetCourierForReport:output_type -> genproto.GetCourierResponse
	4,  // 71: genproto.CourierService.GetCourierWithDelete:output_type -> genproto.GetCourierResponse
	6,  // 72: genproto.CourierService.GetAllCouriers:output_type -> genproto.GetAllCouriersResponse
	6,  // 73: genproto.CourierService.GetAllCouriersWithDelete:output_type -> genproto.GetAllCouriersResponse
	10, // 74: genproto.CourierService.ExistsCourier:output_type -> genproto.ExistsCourierResponse
	10, // 75: genproto.CourierService.ExistsDeletedCourier:output_type -> genproto.ExistsCourierResponse
	49, // 76: genproto.CourierService.GetCourierByPhone:output_type -> genproto.Courier
	16, // 77: genproto.CourierService.GetAllDistributorCouriers:output_type -> genproto.GetAllDistributorCouriersResponse
	60, // 78: genproto.CourierService.Delete:output_type -> google.protobuf.Empty
	60, // 79: genproto.CourierService.BlockCourier:output_type -> google.protobuf.Empty
	60, // 80: genproto.CourierService.UnblockCourier:output_type -> google.protobuf.Empty
	60, // 81: genproto.CourierService.UpdateToken:output_type -> google.protobuf.Empty
	60, // 82: genproto.CourierService.UpdateFcmToken:output_type -> google.protobuf.Empty
	60, // 83: genproto.CourierService.DeleteFcmToken:output_type -> google.protobuf.Empty
	60, // 84: genproto.CourierService.UpdateLastSeen:output_type -> google.protobuf.Empty
	60, // 85: genproto.CourierService.UpdateLastAcceptTime:output_type -> google.protobuf.Empty
	19, // 86: genproto.CourierService.CreateCourierDetails:output_type -> genproto.CreateCourierDetailsResponse
	20, // 87: genproto.CourierService.UpdateCourierDetails:output_type -> genproto.UpdateCourierDetailsResponse
	22, // 88: genproto.CourierService.GetCourierDetails:output_type -> genproto.GetCourierDetailsResponse
	23, // 89: genproto.CourierService.CreateCourierVehicle:output_type -> genproto.CreateCourierVehicleResponse
	24, // 90: genproto.CourierService.UpdateCourierVehicle:output_type -> genproto.UpdateCourierVehicleResponse
	26, // 91: genproto.CourierService.GetCourierVehicle:output_type -> genproto.GetCourierVehicleResponse
	28, // 92: genproto.CourierService.GetAllCourierVehicles:output_type -> genproto.GetAllCourierVehiclesResponse
	60, // 93: genproto.CourierService.DeleteCourierVehicle:output_type -> google.protobuf.Empty
	51, // 94: genproto.CourierService.GetCourierActiveVehicle:output_type -> genproto.CourierVehicle
	31, // 95: genproto.CourierService.SearchCouriersByPhone:output_type -> genproto.SearchCouriersByPhoneResponse
	60, // 96: genproto.CourierService.CreateBranchCourier:output_type -> google.protobuf.Empty
	34, // 97: genproto.CourierService.GetAllBranchCouriers:output_type -> genproto.GetAllBranchCouriersResponse
	36, // 98: genproto.CourierService.GetAllCourierBranches:output_type -> genproto.GetAllCourierBranchesResponse
	60, // 99: genproto.CourierService.DeleteBranchCourier:output_type -> google.protobuf.Empty
	60, // 100: genproto.CourierService.UpdateCourierIsWorking:output_type -> google.protobuf.Empty
	54, // 101: genproto.CourierService.CreateCourierType:output_type -> genproto.CourierTypeId
	61, // 102: genproto.CourierService.GetAllClientTypes:output_type -> genproto.GetAllClientTypesResponse
	55, // 103: genproto.CourierService.GetCourierType:output_type -> genproto.CourierType
	54, // 104: genproto.CourierService.UpdateCourierType:output_type -> genproto.CourierTypeId
	60, // 105: genproto.CourierService.DeleteCourierType:output_type -> google.protobuf.Empty
	62, // 106: genproto.CourierService.CreateCourierAttendanceTime:output_type -> genproto.CourierAttendanceTimeId
	42, // 107: genproto.CourierService.GetAllCourierAttendanceTimes:output_type -> genproto.GetAllCourierAttendanceTimesResponse
	63, // 108: genproto.CourierService.GetCouriersArchiveReport:output_type -> genproto.CouriersArchiveReportResponse
	64, // 109: genproto.CourierService.UpdateCourierBranch:output_type -> genproto.CourierBranchId
	65, // 110: genproto.CourierService.AddCouriersMaxOrder:output_type -> genproto.AddCouriersMaxOrdersResponse
	66, // 111: genproto.CourierService.GetAllCouriersByBranches:output_type -> genproto.GetAllCouriersByBranchesResponse
	6,  // 112: genproto.CourierService.GetAllCouriersLimitless:output_type -> genproto.GetAllCouriersResponse
	44, // 113: genproto.CourierService.GetAllCouriersPhones:output_type -> genproto.GetAllCouriersPhonesResponse
	46, // 114: genproto.CourierService.GetAllCouriersFmcTokens:output_type -> genproto.GetAllCouriersFmcTokensResponse
	60, // 115: genproto.CourierService.UpdateCouriersMaxOrdersCount:output_type -> google.protobuf.Empty
	67, // 116: genproto.CourierService.GetOnlineCouriers:output_type -> genproto.GetOnlineCouriersResponse
	60, // 117: genproto.CourierService.UpdateIikoCourier:output_type -> google.protobuf.Empty
	4,  // 118: genproto.CourierService.GetCourierByCrmID:output_type -> genproto.GetCourierResponse
	67, // [67:119] is the sub-list for method output_type
	15, // [15:67] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_courier_service_proto_init() }
func file_courier_service_proto_init() {
	if File_courier_service_proto != nil {
		return
	}
	file_courier_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_courier_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCourierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCourierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCourierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCouriersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCouriersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllClientTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourierByPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistsCourierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistsCourierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFcmTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLastSeenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLastAcceptTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllDistributorCouriersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllDistributorCouriersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockCourierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnblockCourierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCourierDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCourierDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourierDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourierDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCourierVehicleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCourierVehicleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourierVehicleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourierVehicleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCourierVehiclesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCourierVehiclesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCourierVehicleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCouriersByPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCouriersByPhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBranchCourierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllBranchCouriersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllBranchCouriersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCourierBranchesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCourierBranchesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBranchCourierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourierActiveVehicleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFcmTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCourierIsWorkingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCourierAttendanceTimesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCourierAttendanceTimesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCouriersPhonesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCouriersPhonesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGetAllCouriersFmcTokensRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCouriersFmcTokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCouriersMaxOrdersCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_courier_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIikoCourierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_courier_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_courier_service_proto_goTypes,
		DependencyIndexes: file_courier_service_proto_depIdxs,
		MessageInfos:      file_courier_service_proto_msgTypes,
	}.Build()
	File_courier_service_proto = out.File
	file_courier_service_proto_rawDesc = nil
	file_courier_service_proto_goTypes = nil
	file_courier_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CourierServiceClient is the client API for CourierService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CourierServiceClient interface {
	Create(ctx context.Context, in *Courier, opts ...grpc.CallOption) (*CreateCourierResponse, error)
	Update(ctx context.Context, in *Courier, opts ...grpc.CallOption) (*UpdateCourierResponse, error)
	GetCourier(ctx context.Context, in *GetCourierRequest, opts ...grpc.CallOption) (*GetCourierResponse, error)
	GetCourierForReport(ctx context.Context, in *GetCourierRequest, opts ...grpc.CallOption) (*GetCourierResponse, error)
	GetCourierWithDelete(ctx context.Context, in *GetCourierRequest, opts ...grpc.CallOption) (*GetCourierResponse, error)
	GetAllCouriers(ctx context.Context, in *GetAllCouriersRequest, opts ...grpc.CallOption) (*GetAllCouriersResponse, error)
	GetAllCouriersWithDelete(ctx context.Context, in *GetAllCouriersRequest, opts ...grpc.CallOption) (*GetAllCouriersResponse, error)
	ExistsCourier(ctx context.Context, in *ExistsCourierRequest, opts ...grpc.CallOption) (*ExistsCourierResponse, error)
	ExistsDeletedCourier(ctx context.Context, in *ExistsCourierRequest, opts ...grpc.CallOption) (*ExistsCourierResponse, error)
	GetCourierByPhone(ctx context.Context, in *GetCourierByPhoneRequest, opts ...grpc.CallOption) (*Courier, error)
	GetAllDistributorCouriers(ctx context.Context, in *GetAllDistributorCouriersRequest, opts ...grpc.CallOption) (*GetAllDistributorCouriersResponse, error)
	Delete(ctx context.Context, in *DeleteCourierRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	BlockCourier(ctx context.Context, in *BlockCourierRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UnblockCourier(ctx context.Context, in *UnblockCourierRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateToken(ctx context.Context, in *UpdateTokenRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateFcmToken(ctx context.Context, in *UpdateFcmTokenRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteFcmToken(ctx context.Context, in *DeleteFcmTokenRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateLastSeen(ctx context.Context, in *UpdateLastSeenRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateLastAcceptTime(ctx context.Context, in *UpdateLastAcceptTimeRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateCourierDetails(ctx context.Context, in *CourierDetails, opts ...grpc.CallOption) (*CreateCourierDetailsResponse, error)
	UpdateCourierDetails(ctx context.Context, in *CourierDetails, opts ...grpc.CallOption) (*UpdateCourierDetailsResponse, error)
	GetCourierDetails(ctx context.Context, in *GetCourierDetailsRequest, opts ...grpc.CallOption) (*GetCourierDetailsResponse, error)
	CreateCourierVehicle(ctx context.Context, in *CourierVehicle, opts ...grpc.CallOption) (*CreateCourierVehicleResponse, error)
	UpdateCourierVehicle(ctx context.Context, in *CourierVehicle, opts ...grpc.CallOption) (*UpdateCourierVehicleResponse, error)
	GetCourierVehicle(ctx context.Context, in *GetCourierVehicleRequest, opts ...grpc.CallOption) (*GetCourierVehicleResponse, error)
	GetAllCourierVehicles(ctx context.Context, in *GetAllCourierVehiclesRequest, opts ...grpc.CallOption) (*GetAllCourierVehiclesResponse, error)
	DeleteCourierVehicle(ctx context.Context, in *DeleteCourierVehicleRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetCourierActiveVehicle(ctx context.Context, in *GetCourierActiveVehicleRequest, opts ...grpc.CallOption) (*CourierVehicle, error)
	SearchCouriersByPhone(ctx context.Context, in *SearchCouriersByPhoneRequest, opts ...grpc.CallOption) (*SearchCouriersByPhoneResponse, error)
	CreateBranchCourier(ctx context.Context, in *CreateBranchCourierRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetAllBranchCouriers(ctx context.Context, in *GetAllBranchCouriersRequest, opts ...grpc.CallOption) (*GetAllBranchCouriersResponse, error)
	GetAllCourierBranches(ctx context.Context, in *GetAllCourierBranchesRequest, opts ...grpc.CallOption) (*GetAllCourierBranchesResponse, error)
	DeleteBranchCourier(ctx context.Context, in *DeleteBranchCourierRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateCourierIsWorking(ctx context.Context, in *UpdateCourierIsWorkingRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateCourierType(ctx context.Context, in *CreateCourierTypeRequest, opts ...grpc.CallOption) (*CourierTypeId, error)
	GetAllClientTypes(ctx context.Context, in *GetAllClientTypesRequest, opts ...grpc.CallOption) (*GetAllClientTypesResponse, error)
	GetCourierType(ctx context.Context, in *CourierTypeId, opts ...grpc.CallOption) (*CourierType, error)
	UpdateCourierType(ctx context.Context, in *CourierType, opts ...grpc.CallOption) (*CourierTypeId, error)
	DeleteCourierType(ctx context.Context, in *CourierTypeId, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateCourierAttendanceTime(ctx context.Context, in *CourierAttendanceTime, opts ...grpc.CallOption) (*CourierAttendanceTimeId, error)
	GetAllCourierAttendanceTimes(ctx context.Context, in *GetAllCourierAttendanceTimesRequest, opts ...grpc.CallOption) (*GetAllCourierAttendanceTimesResponse, error)
	GetCouriersArchiveReport(ctx context.Context, in *GetAllCouriersRequest, opts ...grpc.CallOption) (*CouriersArchiveReportResponse, error)
	UpdateCourierBranch(ctx context.Context, in *CourierBranch, opts ...grpc.CallOption) (*CourierBranchId, error)
	AddCouriersMaxOrder(ctx context.Context, in *AddCouriersMaxOrders, opts ...grpc.CallOption) (*AddCouriersMaxOrdersResponse, error)
	GetAllCouriersByBranches(ctx context.Context, in *GetAllCouriersByBranchesRequest, opts ...grpc.CallOption) (*GetAllCouriersByBranchesResponse, error)
	GetAllCouriersLimitless(ctx context.Context, in *GetAllCouriersRequest, opts ...grpc.CallOption) (*GetAllCouriersResponse, error)
	GetAllCouriersPhones(ctx context.Context, in *GetAllCouriersPhonesRequest, opts ...grpc.CallOption) (*GetAllCouriersPhonesResponse, error)
	GetAllCouriersFmcTokens(ctx context.Context, in *GetAllGetAllCouriersFmcTokensRequest, opts ...grpc.CallOption) (*GetAllCouriersFmcTokensResponse, error)
	UpdateCouriersMaxOrdersCount(ctx context.Context, in *UpdateCouriersMaxOrdersCountRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetOnlineCouriers(ctx context.Context, in *GetOnlineCouriersRequest, opts ...grpc.CallOption) (*GetOnlineCouriersResponse, error)
	UpdateIikoCourier(ctx context.Context, in *UpdateIikoCourierRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetCourierByCrmID(ctx context.Context, in *GetCourierRequest, opts ...grpc.CallOption) (*GetCourierResponse, error)
}

type courierServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCourierServiceClient(cc grpc.ClientConnInterface) CourierServiceClient {
	return &courierServiceClient{cc}
}

func (c *courierServiceClient) Create(ctx context.Context, in *Courier, opts ...grpc.CallOption) (*CreateCourierResponse, error) {
	out := new(CreateCourierResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) Update(ctx context.Context, in *Courier, opts ...grpc.CallOption) (*UpdateCourierResponse, error) {
	out := new(UpdateCourierResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetCourier(ctx context.Context, in *GetCourierRequest, opts ...grpc.CallOption) (*GetCourierResponse, error) {
	out := new(GetCourierResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetCourier", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetCourierForReport(ctx context.Context, in *GetCourierRequest, opts ...grpc.CallOption) (*GetCourierResponse, error) {
	out := new(GetCourierResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetCourierForReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetCourierWithDelete(ctx context.Context, in *GetCourierRequest, opts ...grpc.CallOption) (*GetCourierResponse, error) {
	out := new(GetCourierResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetCourierWithDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetAllCouriers(ctx context.Context, in *GetAllCouriersRequest, opts ...grpc.CallOption) (*GetAllCouriersResponse, error) {
	out := new(GetAllCouriersResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetAllCouriers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetAllCouriersWithDelete(ctx context.Context, in *GetAllCouriersRequest, opts ...grpc.CallOption) (*GetAllCouriersResponse, error) {
	out := new(GetAllCouriersResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetAllCouriersWithDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) ExistsCourier(ctx context.Context, in *ExistsCourierRequest, opts ...grpc.CallOption) (*ExistsCourierResponse, error) {
	out := new(ExistsCourierResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/ExistsCourier", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) ExistsDeletedCourier(ctx context.Context, in *ExistsCourierRequest, opts ...grpc.CallOption) (*ExistsCourierResponse, error) {
	out := new(ExistsCourierResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/ExistsDeletedCourier", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetCourierByPhone(ctx context.Context, in *GetCourierByPhoneRequest, opts ...grpc.CallOption) (*Courier, error) {
	out := new(Courier)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetCourierByPhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetAllDistributorCouriers(ctx context.Context, in *GetAllDistributorCouriersRequest, opts ...grpc.CallOption) (*GetAllDistributorCouriersResponse, error) {
	out := new(GetAllDistributorCouriersResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetAllDistributorCouriers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) Delete(ctx context.Context, in *DeleteCourierRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) BlockCourier(ctx context.Context, in *BlockCourierRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/BlockCourier", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) UnblockCourier(ctx context.Context, in *UnblockCourierRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/UnblockCourier", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) UpdateToken(ctx context.Context, in *UpdateTokenRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/UpdateToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) UpdateFcmToken(ctx context.Context, in *UpdateFcmTokenRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/UpdateFcmToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) DeleteFcmToken(ctx context.Context, in *DeleteFcmTokenRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/DeleteFcmToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) UpdateLastSeen(ctx context.Context, in *UpdateLastSeenRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/UpdateLastSeen", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) UpdateLastAcceptTime(ctx context.Context, in *UpdateLastAcceptTimeRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/UpdateLastAcceptTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) CreateCourierDetails(ctx context.Context, in *CourierDetails, opts ...grpc.CallOption) (*CreateCourierDetailsResponse, error) {
	out := new(CreateCourierDetailsResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/CreateCourierDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) UpdateCourierDetails(ctx context.Context, in *CourierDetails, opts ...grpc.CallOption) (*UpdateCourierDetailsResponse, error) {
	out := new(UpdateCourierDetailsResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/UpdateCourierDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetCourierDetails(ctx context.Context, in *GetCourierDetailsRequest, opts ...grpc.CallOption) (*GetCourierDetailsResponse, error) {
	out := new(GetCourierDetailsResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetCourierDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) CreateCourierVehicle(ctx context.Context, in *CourierVehicle, opts ...grpc.CallOption) (*CreateCourierVehicleResponse, error) {
	out := new(CreateCourierVehicleResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/CreateCourierVehicle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) UpdateCourierVehicle(ctx context.Context, in *CourierVehicle, opts ...grpc.CallOption) (*UpdateCourierVehicleResponse, error) {
	out := new(UpdateCourierVehicleResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/UpdateCourierVehicle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetCourierVehicle(ctx context.Context, in *GetCourierVehicleRequest, opts ...grpc.CallOption) (*GetCourierVehicleResponse, error) {
	out := new(GetCourierVehicleResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetCourierVehicle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetAllCourierVehicles(ctx context.Context, in *GetAllCourierVehiclesRequest, opts ...grpc.CallOption) (*GetAllCourierVehiclesResponse, error) {
	out := new(GetAllCourierVehiclesResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetAllCourierVehicles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) DeleteCourierVehicle(ctx context.Context, in *DeleteCourierVehicleRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/DeleteCourierVehicle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetCourierActiveVehicle(ctx context.Context, in *GetCourierActiveVehicleRequest, opts ...grpc.CallOption) (*CourierVehicle, error) {
	out := new(CourierVehicle)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetCourierActiveVehicle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) SearchCouriersByPhone(ctx context.Context, in *SearchCouriersByPhoneRequest, opts ...grpc.CallOption) (*SearchCouriersByPhoneResponse, error) {
	out := new(SearchCouriersByPhoneResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/SearchCouriersByPhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) CreateBranchCourier(ctx context.Context, in *CreateBranchCourierRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/CreateBranchCourier", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetAllBranchCouriers(ctx context.Context, in *GetAllBranchCouriersRequest, opts ...grpc.CallOption) (*GetAllBranchCouriersResponse, error) {
	out := new(GetAllBranchCouriersResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetAllBranchCouriers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetAllCourierBranches(ctx context.Context, in *GetAllCourierBranchesRequest, opts ...grpc.CallOption) (*GetAllCourierBranchesResponse, error) {
	out := new(GetAllCourierBranchesResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetAllCourierBranches", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) DeleteBranchCourier(ctx context.Context, in *DeleteBranchCourierRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/DeleteBranchCourier", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) UpdateCourierIsWorking(ctx context.Context, in *UpdateCourierIsWorkingRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/UpdateCourierIsWorking", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) CreateCourierType(ctx context.Context, in *CreateCourierTypeRequest, opts ...grpc.CallOption) (*CourierTypeId, error) {
	out := new(CourierTypeId)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/CreateCourierType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetAllClientTypes(ctx context.Context, in *GetAllClientTypesRequest, opts ...grpc.CallOption) (*GetAllClientTypesResponse, error) {
	out := new(GetAllClientTypesResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetAllClientTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetCourierType(ctx context.Context, in *CourierTypeId, opts ...grpc.CallOption) (*CourierType, error) {
	out := new(CourierType)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetCourierType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) UpdateCourierType(ctx context.Context, in *CourierType, opts ...grpc.CallOption) (*CourierTypeId, error) {
	out := new(CourierTypeId)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/UpdateCourierType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) DeleteCourierType(ctx context.Context, in *CourierTypeId, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/DeleteCourierType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) CreateCourierAttendanceTime(ctx context.Context, in *CourierAttendanceTime, opts ...grpc.CallOption) (*CourierAttendanceTimeId, error) {
	out := new(CourierAttendanceTimeId)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/CreateCourierAttendanceTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetAllCourierAttendanceTimes(ctx context.Context, in *GetAllCourierAttendanceTimesRequest, opts ...grpc.CallOption) (*GetAllCourierAttendanceTimesResponse, error) {
	out := new(GetAllCourierAttendanceTimesResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetAllCourierAttendanceTimes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetCouriersArchiveReport(ctx context.Context, in *GetAllCouriersRequest, opts ...grpc.CallOption) (*CouriersArchiveReportResponse, error) {
	out := new(CouriersArchiveReportResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetCouriersArchiveReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) UpdateCourierBranch(ctx context.Context, in *CourierBranch, opts ...grpc.CallOption) (*CourierBranchId, error) {
	out := new(CourierBranchId)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/UpdateCourierBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) AddCouriersMaxOrder(ctx context.Context, in *AddCouriersMaxOrders, opts ...grpc.CallOption) (*AddCouriersMaxOrdersResponse, error) {
	out := new(AddCouriersMaxOrdersResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/AddCouriersMaxOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetAllCouriersByBranches(ctx context.Context, in *GetAllCouriersByBranchesRequest, opts ...grpc.CallOption) (*GetAllCouriersByBranchesResponse, error) {
	out := new(GetAllCouriersByBranchesResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetAllCouriersByBranches", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetAllCouriersLimitless(ctx context.Context, in *GetAllCouriersRequest, opts ...grpc.CallOption) (*GetAllCouriersResponse, error) {
	out := new(GetAllCouriersResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetAllCouriersLimitless", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetAllCouriersPhones(ctx context.Context, in *GetAllCouriersPhonesRequest, opts ...grpc.CallOption) (*GetAllCouriersPhonesResponse, error) {
	out := new(GetAllCouriersPhonesResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetAllCouriersPhones", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetAllCouriersFmcTokens(ctx context.Context, in *GetAllGetAllCouriersFmcTokensRequest, opts ...grpc.CallOption) (*GetAllCouriersFmcTokensResponse, error) {
	out := new(GetAllCouriersFmcTokensResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetAllCouriersFmcTokens", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) UpdateCouriersMaxOrdersCount(ctx context.Context, in *UpdateCouriersMaxOrdersCountRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/UpdateCouriersMaxOrdersCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetOnlineCouriers(ctx context.Context, in *GetOnlineCouriersRequest, opts ...grpc.CallOption) (*GetOnlineCouriersResponse, error) {
	out := new(GetOnlineCouriersResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetOnlineCouriers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) UpdateIikoCourier(ctx context.Context, in *UpdateIikoCourierRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/UpdateIikoCourier", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courierServiceClient) GetCourierByCrmID(ctx context.Context, in *GetCourierRequest, opts ...grpc.CallOption) (*GetCourierResponse, error) {
	out := new(GetCourierResponse)
	err := c.cc.Invoke(ctx, "/genproto.CourierService/GetCourierByCrmID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CourierServiceServer is the server API for CourierService service.
type CourierServiceServer interface {
	Create(context.Context, *Courier) (*CreateCourierResponse, error)
	Update(context.Context, *Courier) (*UpdateCourierResponse, error)
	GetCourier(context.Context, *GetCourierRequest) (*GetCourierResponse, error)
	GetCourierForReport(context.Context, *GetCourierRequest) (*GetCourierResponse, error)
	GetCourierWithDelete(context.Context, *GetCourierRequest) (*GetCourierResponse, error)
	GetAllCouriers(context.Context, *GetAllCouriersRequest) (*GetAllCouriersResponse, error)
	GetAllCouriersWithDelete(context.Context, *GetAllCouriersRequest) (*GetAllCouriersResponse, error)
	ExistsCourier(context.Context, *ExistsCourierRequest) (*ExistsCourierResponse, error)
	ExistsDeletedCourier(context.Context, *ExistsCourierRequest) (*ExistsCourierResponse, error)
	GetCourierByPhone(context.Context, *GetCourierByPhoneRequest) (*Courier, error)
	GetAllDistributorCouriers(context.Context, *GetAllDistributorCouriersRequest) (*GetAllDistributorCouriersResponse, error)
	Delete(context.Context, *DeleteCourierRequest) (*empty.Empty, error)
	BlockCourier(context.Context, *BlockCourierRequest) (*empty.Empty, error)
	UnblockCourier(context.Context, *UnblockCourierRequest) (*empty.Empty, error)
	UpdateToken(context.Context, *UpdateTokenRequest) (*empty.Empty, error)
	UpdateFcmToken(context.Context, *UpdateFcmTokenRequest) (*empty.Empty, error)
	DeleteFcmToken(context.Context, *DeleteFcmTokenRequest) (*empty.Empty, error)
	UpdateLastSeen(context.Context, *UpdateLastSeenRequest) (*empty.Empty, error)
	UpdateLastAcceptTime(context.Context, *UpdateLastAcceptTimeRequest) (*empty.Empty, error)
	CreateCourierDetails(context.Context, *CourierDetails) (*CreateCourierDetailsResponse, error)
	UpdateCourierDetails(context.Context, *CourierDetails) (*UpdateCourierDetailsResponse, error)
	GetCourierDetails(context.Context, *GetCourierDetailsRequest) (*GetCourierDetailsResponse, error)
	CreateCourierVehicle(context.Context, *CourierVehicle) (*CreateCourierVehicleResponse, error)
	UpdateCourierVehicle(context.Context, *CourierVehicle) (*UpdateCourierVehicleResponse, error)
	GetCourierVehicle(context.Context, *GetCourierVehicleRequest) (*GetCourierVehicleResponse, error)
	GetAllCourierVehicles(context.Context, *GetAllCourierVehiclesRequest) (*GetAllCourierVehiclesResponse, error)
	DeleteCourierVehicle(context.Context, *DeleteCourierVehicleRequest) (*empty.Empty, error)
	GetCourierActiveVehicle(context.Context, *GetCourierActiveVehicleRequest) (*CourierVehicle, error)
	SearchCouriersByPhone(context.Context, *SearchCouriersByPhoneRequest) (*SearchCouriersByPhoneResponse, error)
	CreateBranchCourier(context.Context, *CreateBranchCourierRequest) (*empty.Empty, error)
	GetAllBranchCouriers(context.Context, *GetAllBranchCouriersRequest) (*GetAllBranchCouriersResponse, error)
	GetAllCourierBranches(context.Context, *GetAllCourierBranchesRequest) (*GetAllCourierBranchesResponse, error)
	DeleteBranchCourier(context.Context, *DeleteBranchCourierRequest) (*empty.Empty, error)
	UpdateCourierIsWorking(context.Context, *UpdateCourierIsWorkingRequest) (*empty.Empty, error)
	CreateCourierType(context.Context, *CreateCourierTypeRequest) (*CourierTypeId, error)
	GetAllClientTypes(context.Context, *GetAllClientTypesRequest) (*GetAllClientTypesResponse, error)
	GetCourierType(context.Context, *CourierTypeId) (*CourierType, error)
	UpdateCourierType(context.Context, *CourierType) (*CourierTypeId, error)
	DeleteCourierType(context.Context, *CourierTypeId) (*empty.Empty, error)
	CreateCourierAttendanceTime(context.Context, *CourierAttendanceTime) (*CourierAttendanceTimeId, error)
	GetAllCourierAttendanceTimes(context.Context, *GetAllCourierAttendanceTimesRequest) (*GetAllCourierAttendanceTimesResponse, error)
	GetCouriersArchiveReport(context.Context, *GetAllCouriersRequest) (*CouriersArchiveReportResponse, error)
	UpdateCourierBranch(context.Context, *CourierBranch) (*CourierBranchId, error)
	AddCouriersMaxOrder(context.Context, *AddCouriersMaxOrders) (*AddCouriersMaxOrdersResponse, error)
	GetAllCouriersByBranches(context.Context, *GetAllCouriersByBranchesRequest) (*GetAllCouriersByBranchesResponse, error)
	GetAllCouriersLimitless(context.Context, *GetAllCouriersRequest) (*GetAllCouriersResponse, error)
	GetAllCouriersPhones(context.Context, *GetAllCouriersPhonesRequest) (*GetAllCouriersPhonesResponse, error)
	GetAllCouriersFmcTokens(context.Context, *GetAllGetAllCouriersFmcTokensRequest) (*GetAllCouriersFmcTokensResponse, error)
	UpdateCouriersMaxOrdersCount(context.Context, *UpdateCouriersMaxOrdersCountRequest) (*empty.Empty, error)
	GetOnlineCouriers(context.Context, *GetOnlineCouriersRequest) (*GetOnlineCouriersResponse, error)
	UpdateIikoCourier(context.Context, *UpdateIikoCourierRequest) (*empty.Empty, error)
	GetCourierByCrmID(context.Context, *GetCourierRequest) (*GetCourierResponse, error)
}

// UnimplementedCourierServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCourierServiceServer struct {
}

func (*UnimplementedCourierServiceServer) Create(context.Context, *Courier) (*CreateCourierResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedCourierServiceServer) Update(context.Context, *Courier) (*UpdateCourierResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedCourierServiceServer) GetCourier(context.Context, *GetCourierRequest) (*GetCourierResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCourier not implemented")
}
func (*UnimplementedCourierServiceServer) GetCourierForReport(context.Context, *GetCourierRequest) (*GetCourierResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCourierForReport not implemented")
}
func (*UnimplementedCourierServiceServer) GetCourierWithDelete(context.Context, *GetCourierRequest) (*GetCourierResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCourierWithDelete not implemented")
}
func (*UnimplementedCourierServiceServer) GetAllCouriers(context.Context, *GetAllCouriersRequest) (*GetAllCouriersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllCouriers not implemented")
}
func (*UnimplementedCourierServiceServer) GetAllCouriersWithDelete(context.Context, *GetAllCouriersRequest) (*GetAllCouriersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllCouriersWithDelete not implemented")
}
func (*UnimplementedCourierServiceServer) ExistsCourier(context.Context, *ExistsCourierRequest) (*ExistsCourierResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExistsCourier not implemented")
}
func (*UnimplementedCourierServiceServer) ExistsDeletedCourier(context.Context, *ExistsCourierRequest) (*ExistsCourierResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExistsDeletedCourier not implemented")
}
func (*UnimplementedCourierServiceServer) GetCourierByPhone(context.Context, *GetCourierByPhoneRequest) (*Courier, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCourierByPhone not implemented")
}
func (*UnimplementedCourierServiceServer) GetAllDistributorCouriers(context.Context, *GetAllDistributorCouriersRequest) (*GetAllDistributorCouriersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllDistributorCouriers not implemented")
}
func (*UnimplementedCourierServiceServer) Delete(context.Context, *DeleteCourierRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedCourierServiceServer) BlockCourier(context.Context, *BlockCourierRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BlockCourier not implemented")
}
func (*UnimplementedCourierServiceServer) UnblockCourier(context.Context, *UnblockCourierRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnblockCourier not implemented")
}
func (*UnimplementedCourierServiceServer) UpdateToken(context.Context, *UpdateTokenRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateToken not implemented")
}
func (*UnimplementedCourierServiceServer) UpdateFcmToken(context.Context, *UpdateFcmTokenRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFcmToken not implemented")
}
func (*UnimplementedCourierServiceServer) DeleteFcmToken(context.Context, *DeleteFcmTokenRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFcmToken not implemented")
}
func (*UnimplementedCourierServiceServer) UpdateLastSeen(context.Context, *UpdateLastSeenRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLastSeen not implemented")
}
func (*UnimplementedCourierServiceServer) UpdateLastAcceptTime(context.Context, *UpdateLastAcceptTimeRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLastAcceptTime not implemented")
}
func (*UnimplementedCourierServiceServer) CreateCourierDetails(context.Context, *CourierDetails) (*CreateCourierDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCourierDetails not implemented")
}
func (*UnimplementedCourierServiceServer) UpdateCourierDetails(context.Context, *CourierDetails) (*UpdateCourierDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCourierDetails not implemented")
}
func (*UnimplementedCourierServiceServer) GetCourierDetails(context.Context, *GetCourierDetailsRequest) (*GetCourierDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCourierDetails not implemented")
}
func (*UnimplementedCourierServiceServer) CreateCourierVehicle(context.Context, *CourierVehicle) (*CreateCourierVehicleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCourierVehicle not implemented")
}
func (*UnimplementedCourierServiceServer) UpdateCourierVehicle(context.Context, *CourierVehicle) (*UpdateCourierVehicleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCourierVehicle not implemented")
}
func (*UnimplementedCourierServiceServer) GetCourierVehicle(context.Context, *GetCourierVehicleRequest) (*GetCourierVehicleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCourierVehicle not implemented")
}
func (*UnimplementedCourierServiceServer) GetAllCourierVehicles(context.Context, *GetAllCourierVehiclesRequest) (*GetAllCourierVehiclesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllCourierVehicles not implemented")
}
func (*UnimplementedCourierServiceServer) DeleteCourierVehicle(context.Context, *DeleteCourierVehicleRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCourierVehicle not implemented")
}
func (*UnimplementedCourierServiceServer) GetCourierActiveVehicle(context.Context, *GetCourierActiveVehicleRequest) (*CourierVehicle, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCourierActiveVehicle not implemented")
}
func (*UnimplementedCourierServiceServer) SearchCouriersByPhone(context.Context, *SearchCouriersByPhoneRequest) (*SearchCouriersByPhoneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchCouriersByPhone not implemented")
}
func (*UnimplementedCourierServiceServer) CreateBranchCourier(context.Context, *CreateBranchCourierRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBranchCourier not implemented")
}
func (*UnimplementedCourierServiceServer) GetAllBranchCouriers(context.Context, *GetAllBranchCouriersRequest) (*GetAllBranchCouriersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllBranchCouriers not implemented")
}
func (*UnimplementedCourierServiceServer) GetAllCourierBranches(context.Context, *GetAllCourierBranchesRequest) (*GetAllCourierBranchesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllCourierBranches not implemented")
}
func (*UnimplementedCourierServiceServer) DeleteBranchCourier(context.Context, *DeleteBranchCourierRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBranchCourier not implemented")
}
func (*UnimplementedCourierServiceServer) UpdateCourierIsWorking(context.Context, *UpdateCourierIsWorkingRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCourierIsWorking not implemented")
}
func (*UnimplementedCourierServiceServer) CreateCourierType(context.Context, *CreateCourierTypeRequest) (*CourierTypeId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCourierType not implemented")
}
func (*UnimplementedCourierServiceServer) GetAllClientTypes(context.Context, *GetAllClientTypesRequest) (*GetAllClientTypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllClientTypes not implemented")
}
func (*UnimplementedCourierServiceServer) GetCourierType(context.Context, *CourierTypeId) (*CourierType, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCourierType not implemented")
}
func (*UnimplementedCourierServiceServer) UpdateCourierType(context.Context, *CourierType) (*CourierTypeId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCourierType not implemented")
}
func (*UnimplementedCourierServiceServer) DeleteCourierType(context.Context, *CourierTypeId) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCourierType not implemented")
}
func (*UnimplementedCourierServiceServer) CreateCourierAttendanceTime(context.Context, *CourierAttendanceTime) (*CourierAttendanceTimeId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCourierAttendanceTime not implemented")
}
func (*UnimplementedCourierServiceServer) GetAllCourierAttendanceTimes(context.Context, *GetAllCourierAttendanceTimesRequest) (*GetAllCourierAttendanceTimesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllCourierAttendanceTimes not implemented")
}
func (*UnimplementedCourierServiceServer) GetCouriersArchiveReport(context.Context, *GetAllCouriersRequest) (*CouriersArchiveReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouriersArchiveReport not implemented")
}
func (*UnimplementedCourierServiceServer) UpdateCourierBranch(context.Context, *CourierBranch) (*CourierBranchId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCourierBranch not implemented")
}
func (*UnimplementedCourierServiceServer) AddCouriersMaxOrder(context.Context, *AddCouriersMaxOrders) (*AddCouriersMaxOrdersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCouriersMaxOrder not implemented")
}
func (*UnimplementedCourierServiceServer) GetAllCouriersByBranches(context.Context, *GetAllCouriersByBranchesRequest) (*GetAllCouriersByBranchesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllCouriersByBranches not implemented")
}
func (*UnimplementedCourierServiceServer) GetAllCouriersLimitless(context.Context, *GetAllCouriersRequest) (*GetAllCouriersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllCouriersLimitless not implemented")
}
func (*UnimplementedCourierServiceServer) GetAllCouriersPhones(context.Context, *GetAllCouriersPhonesRequest) (*GetAllCouriersPhonesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllCouriersPhones not implemented")
}
func (*UnimplementedCourierServiceServer) GetAllCouriersFmcTokens(context.Context, *GetAllGetAllCouriersFmcTokensRequest) (*GetAllCouriersFmcTokensResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllCouriersFmcTokens not implemented")
}
func (*UnimplementedCourierServiceServer) UpdateCouriersMaxOrdersCount(context.Context, *UpdateCouriersMaxOrdersCountRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCouriersMaxOrdersCount not implemented")
}
func (*UnimplementedCourierServiceServer) GetOnlineCouriers(context.Context, *GetOnlineCouriersRequest) (*GetOnlineCouriersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOnlineCouriers not implemented")
}
func (*UnimplementedCourierServiceServer) UpdateIikoCourier(context.Context, *UpdateIikoCourierRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateIikoCourier not implemented")
}
func (*UnimplementedCourierServiceServer) GetCourierByCrmID(context.Context, *GetCourierRequest) (*GetCourierResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCourierByCrmID not implemented")
}

func RegisterCourierServiceServer(s *grpc.Server, srv CourierServiceServer) {
	s.RegisterService(&_CourierService_serviceDesc, srv)
}

func _CourierService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Courier)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).Create(ctx, req.(*Courier))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Courier)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).Update(ctx, req.(*Courier))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetCourier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCourierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetCourier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetCourier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetCourier(ctx, req.(*GetCourierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetCourierForReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCourierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetCourierForReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetCourierForReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetCourierForReport(ctx, req.(*GetCourierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetCourierWithDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCourierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetCourierWithDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetCourierWithDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetCourierWithDelete(ctx, req.(*GetCourierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetAllCouriers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllCouriersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetAllCouriers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetAllCouriers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetAllCouriers(ctx, req.(*GetAllCouriersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetAllCouriersWithDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllCouriersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetAllCouriersWithDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetAllCouriersWithDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetAllCouriersWithDelete(ctx, req.(*GetAllCouriersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_ExistsCourier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExistsCourierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).ExistsCourier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/ExistsCourier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).ExistsCourier(ctx, req.(*ExistsCourierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_ExistsDeletedCourier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExistsCourierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).ExistsDeletedCourier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/ExistsDeletedCourier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).ExistsDeletedCourier(ctx, req.(*ExistsCourierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetCourierByPhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCourierByPhoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetCourierByPhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetCourierByPhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetCourierByPhone(ctx, req.(*GetCourierByPhoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetAllDistributorCouriers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllDistributorCouriersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetAllDistributorCouriers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetAllDistributorCouriers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetAllDistributorCouriers(ctx, req.(*GetAllDistributorCouriersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCourierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).Delete(ctx, req.(*DeleteCourierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_BlockCourier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockCourierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).BlockCourier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/BlockCourier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).BlockCourier(ctx, req.(*BlockCourierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_UnblockCourier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnblockCourierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).UnblockCourier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/UnblockCourier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).UnblockCourier(ctx, req.(*UnblockCourierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_UpdateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).UpdateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/UpdateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).UpdateToken(ctx, req.(*UpdateTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_UpdateFcmToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFcmTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).UpdateFcmToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/UpdateFcmToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).UpdateFcmToken(ctx, req.(*UpdateFcmTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_DeleteFcmToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFcmTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).DeleteFcmToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/DeleteFcmToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).DeleteFcmToken(ctx, req.(*DeleteFcmTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_UpdateLastSeen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLastSeenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).UpdateLastSeen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/UpdateLastSeen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).UpdateLastSeen(ctx, req.(*UpdateLastSeenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_UpdateLastAcceptTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLastAcceptTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).UpdateLastAcceptTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/UpdateLastAcceptTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).UpdateLastAcceptTime(ctx, req.(*UpdateLastAcceptTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_CreateCourierDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CourierDetails)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).CreateCourierDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/CreateCourierDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).CreateCourierDetails(ctx, req.(*CourierDetails))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_UpdateCourierDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CourierDetails)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).UpdateCourierDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/UpdateCourierDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).UpdateCourierDetails(ctx, req.(*CourierDetails))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetCourierDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCourierDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetCourierDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetCourierDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetCourierDetails(ctx, req.(*GetCourierDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_CreateCourierVehicle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CourierVehicle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).CreateCourierVehicle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/CreateCourierVehicle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).CreateCourierVehicle(ctx, req.(*CourierVehicle))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_UpdateCourierVehicle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CourierVehicle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).UpdateCourierVehicle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/UpdateCourierVehicle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).UpdateCourierVehicle(ctx, req.(*CourierVehicle))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetCourierVehicle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCourierVehicleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetCourierVehicle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetCourierVehicle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetCourierVehicle(ctx, req.(*GetCourierVehicleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetAllCourierVehicles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllCourierVehiclesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetAllCourierVehicles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetAllCourierVehicles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetAllCourierVehicles(ctx, req.(*GetAllCourierVehiclesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_DeleteCourierVehicle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCourierVehicleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).DeleteCourierVehicle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/DeleteCourierVehicle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).DeleteCourierVehicle(ctx, req.(*DeleteCourierVehicleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetCourierActiveVehicle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCourierActiveVehicleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetCourierActiveVehicle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetCourierActiveVehicle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetCourierActiveVehicle(ctx, req.(*GetCourierActiveVehicleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_SearchCouriersByPhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchCouriersByPhoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).SearchCouriersByPhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/SearchCouriersByPhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).SearchCouriersByPhone(ctx, req.(*SearchCouriersByPhoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_CreateBranchCourier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBranchCourierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).CreateBranchCourier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/CreateBranchCourier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).CreateBranchCourier(ctx, req.(*CreateBranchCourierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetAllBranchCouriers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllBranchCouriersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetAllBranchCouriers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetAllBranchCouriers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetAllBranchCouriers(ctx, req.(*GetAllBranchCouriersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetAllCourierBranches_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllCourierBranchesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetAllCourierBranches(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetAllCourierBranches",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetAllCourierBranches(ctx, req.(*GetAllCourierBranchesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_DeleteBranchCourier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBranchCourierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).DeleteBranchCourier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/DeleteBranchCourier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).DeleteBranchCourier(ctx, req.(*DeleteBranchCourierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_UpdateCourierIsWorking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCourierIsWorkingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).UpdateCourierIsWorking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/UpdateCourierIsWorking",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).UpdateCourierIsWorking(ctx, req.(*UpdateCourierIsWorkingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_CreateCourierType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCourierTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).CreateCourierType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/CreateCourierType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).CreateCourierType(ctx, req.(*CreateCourierTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetAllClientTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllClientTypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetAllClientTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetAllClientTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetAllClientTypes(ctx, req.(*GetAllClientTypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetCourierType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CourierTypeId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetCourierType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetCourierType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetCourierType(ctx, req.(*CourierTypeId))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_UpdateCourierType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CourierType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).UpdateCourierType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/UpdateCourierType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).UpdateCourierType(ctx, req.(*CourierType))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_DeleteCourierType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CourierTypeId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).DeleteCourierType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/DeleteCourierType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).DeleteCourierType(ctx, req.(*CourierTypeId))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_CreateCourierAttendanceTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CourierAttendanceTime)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).CreateCourierAttendanceTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/CreateCourierAttendanceTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).CreateCourierAttendanceTime(ctx, req.(*CourierAttendanceTime))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetAllCourierAttendanceTimes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllCourierAttendanceTimesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetAllCourierAttendanceTimes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetAllCourierAttendanceTimes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetAllCourierAttendanceTimes(ctx, req.(*GetAllCourierAttendanceTimesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetCouriersArchiveReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllCouriersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetCouriersArchiveReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetCouriersArchiveReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetCouriersArchiveReport(ctx, req.(*GetAllCouriersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_UpdateCourierBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CourierBranch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).UpdateCourierBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/UpdateCourierBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).UpdateCourierBranch(ctx, req.(*CourierBranch))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_AddCouriersMaxOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCouriersMaxOrders)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).AddCouriersMaxOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/AddCouriersMaxOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).AddCouriersMaxOrder(ctx, req.(*AddCouriersMaxOrders))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetAllCouriersByBranches_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllCouriersByBranchesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetAllCouriersByBranches(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetAllCouriersByBranches",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetAllCouriersByBranches(ctx, req.(*GetAllCouriersByBranchesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetAllCouriersLimitless_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllCouriersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetAllCouriersLimitless(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetAllCouriersLimitless",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetAllCouriersLimitless(ctx, req.(*GetAllCouriersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetAllCouriersPhones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllCouriersPhonesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetAllCouriersPhones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetAllCouriersPhones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetAllCouriersPhones(ctx, req.(*GetAllCouriersPhonesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetAllCouriersFmcTokens_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllGetAllCouriersFmcTokensRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetAllCouriersFmcTokens(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetAllCouriersFmcTokens",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetAllCouriersFmcTokens(ctx, req.(*GetAllGetAllCouriersFmcTokensRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_UpdateCouriersMaxOrdersCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCouriersMaxOrdersCountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).UpdateCouriersMaxOrdersCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/UpdateCouriersMaxOrdersCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).UpdateCouriersMaxOrdersCount(ctx, req.(*UpdateCouriersMaxOrdersCountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetOnlineCouriers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOnlineCouriersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetOnlineCouriers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetOnlineCouriers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetOnlineCouriers(ctx, req.(*GetOnlineCouriersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_UpdateIikoCourier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateIikoCourierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).UpdateIikoCourier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/UpdateIikoCourier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).UpdateIikoCourier(ctx, req.(*UpdateIikoCourierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CourierService_GetCourierByCrmID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCourierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServiceServer).GetCourierByCrmID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CourierService/GetCourierByCrmID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServiceServer).GetCourierByCrmID(ctx, req.(*GetCourierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CourierService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.CourierService",
	HandlerType: (*CourierServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _CourierService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _CourierService_Update_Handler,
		},
		{
			MethodName: "GetCourier",
			Handler:    _CourierService_GetCourier_Handler,
		},
		{
			MethodName: "GetCourierForReport",
			Handler:    _CourierService_GetCourierForReport_Handler,
		},
		{
			MethodName: "GetCourierWithDelete",
			Handler:    _CourierService_GetCourierWithDelete_Handler,
		},
		{
			MethodName: "GetAllCouriers",
			Handler:    _CourierService_GetAllCouriers_Handler,
		},
		{
			MethodName: "GetAllCouriersWithDelete",
			Handler:    _CourierService_GetAllCouriersWithDelete_Handler,
		},
		{
			MethodName: "ExistsCourier",
			Handler:    _CourierService_ExistsCourier_Handler,
		},
		{
			MethodName: "ExistsDeletedCourier",
			Handler:    _CourierService_ExistsDeletedCourier_Handler,
		},
		{
			MethodName: "GetCourierByPhone",
			Handler:    _CourierService_GetCourierByPhone_Handler,
		},
		{
			MethodName: "GetAllDistributorCouriers",
			Handler:    _CourierService_GetAllDistributorCouriers_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _CourierService_Delete_Handler,
		},
		{
			MethodName: "BlockCourier",
			Handler:    _CourierService_BlockCourier_Handler,
		},
		{
			MethodName: "UnblockCourier",
			Handler:    _CourierService_UnblockCourier_Handler,
		},
		{
			MethodName: "UpdateToken",
			Handler:    _CourierService_UpdateToken_Handler,
		},
		{
			MethodName: "UpdateFcmToken",
			Handler:    _CourierService_UpdateFcmToken_Handler,
		},
		{
			MethodName: "DeleteFcmToken",
			Handler:    _CourierService_DeleteFcmToken_Handler,
		},
		{
			MethodName: "UpdateLastSeen",
			Handler:    _CourierService_UpdateLastSeen_Handler,
		},
		{
			MethodName: "UpdateLastAcceptTime",
			Handler:    _CourierService_UpdateLastAcceptTime_Handler,
		},
		{
			MethodName: "CreateCourierDetails",
			Handler:    _CourierService_CreateCourierDetails_Handler,
		},
		{
			MethodName: "UpdateCourierDetails",
			Handler:    _CourierService_UpdateCourierDetails_Handler,
		},
		{
			MethodName: "GetCourierDetails",
			Handler:    _CourierService_GetCourierDetails_Handler,
		},
		{
			MethodName: "CreateCourierVehicle",
			Handler:    _CourierService_CreateCourierVehicle_Handler,
		},
		{
			MethodName: "UpdateCourierVehicle",
			Handler:    _CourierService_UpdateCourierVehicle_Handler,
		},
		{
			MethodName: "GetCourierVehicle",
			Handler:    _CourierService_GetCourierVehicle_Handler,
		},
		{
			MethodName: "GetAllCourierVehicles",
			Handler:    _CourierService_GetAllCourierVehicles_Handler,
		},
		{
			MethodName: "DeleteCourierVehicle",
			Handler:    _CourierService_DeleteCourierVehicle_Handler,
		},
		{
			MethodName: "GetCourierActiveVehicle",
			Handler:    _CourierService_GetCourierActiveVehicle_Handler,
		},
		{
			MethodName: "SearchCouriersByPhone",
			Handler:    _CourierService_SearchCouriersByPhone_Handler,
		},
		{
			MethodName: "CreateBranchCourier",
			Handler:    _CourierService_CreateBranchCourier_Handler,
		},
		{
			MethodName: "GetAllBranchCouriers",
			Handler:    _CourierService_GetAllBranchCouriers_Handler,
		},
		{
			MethodName: "GetAllCourierBranches",
			Handler:    _CourierService_GetAllCourierBranches_Handler,
		},
		{
			MethodName: "DeleteBranchCourier",
			Handler:    _CourierService_DeleteBranchCourier_Handler,
		},
		{
			MethodName: "UpdateCourierIsWorking",
			Handler:    _CourierService_UpdateCourierIsWorking_Handler,
		},
		{
			MethodName: "CreateCourierType",
			Handler:    _CourierService_CreateCourierType_Handler,
		},
		{
			MethodName: "GetAllClientTypes",
			Handler:    _CourierService_GetAllClientTypes_Handler,
		},
		{
			MethodName: "GetCourierType",
			Handler:    _CourierService_GetCourierType_Handler,
		},
		{
			MethodName: "UpdateCourierType",
			Handler:    _CourierService_UpdateCourierType_Handler,
		},
		{
			MethodName: "DeleteCourierType",
			Handler:    _CourierService_DeleteCourierType_Handler,
		},
		{
			MethodName: "CreateCourierAttendanceTime",
			Handler:    _CourierService_CreateCourierAttendanceTime_Handler,
		},
		{
			MethodName: "GetAllCourierAttendanceTimes",
			Handler:    _CourierService_GetAllCourierAttendanceTimes_Handler,
		},
		{
			MethodName: "GetCouriersArchiveReport",
			Handler:    _CourierService_GetCouriersArchiveReport_Handler,
		},
		{
			MethodName: "UpdateCourierBranch",
			Handler:    _CourierService_UpdateCourierBranch_Handler,
		},
		{
			MethodName: "AddCouriersMaxOrder",
			Handler:    _CourierService_AddCouriersMaxOrder_Handler,
		},
		{
			MethodName: "GetAllCouriersByBranches",
			Handler:    _CourierService_GetAllCouriersByBranches_Handler,
		},
		{
			MethodName: "GetAllCouriersLimitless",
			Handler:    _CourierService_GetAllCouriersLimitless_Handler,
		},
		{
			MethodName: "GetAllCouriersPhones",
			Handler:    _CourierService_GetAllCouriersPhones_Handler,
		},
		{
			MethodName: "GetAllCouriersFmcTokens",
			Handler:    _CourierService_GetAllCouriersFmcTokens_Handler,
		},
		{
			MethodName: "UpdateCouriersMaxOrdersCount",
			Handler:    _CourierService_UpdateCouriersMaxOrdersCount_Handler,
		},
		{
			MethodName: "GetOnlineCouriers",
			Handler:    _CourierService_GetOnlineCouriers_Handler,
		},
		{
			MethodName: "UpdateIikoCourier",
			Handler:    _CourierService_UpdateIikoCourier_Handler,
		},
		{
			MethodName: "GetCourierByCrmID",
			Handler:    _CourierService_GetCourierByCrmID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "courier_service.proto",
}
