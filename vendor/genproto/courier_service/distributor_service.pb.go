// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: distributor_service.proto

package courier_service

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateDistributorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Distributor *Distributor `protobuf:"bytes,1,opt,name=distributor,proto3" json:"distributor,omitempty"`
}

func (x *CreateDistributorResponse) Reset() {
	*x = CreateDistributorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributor_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDistributorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDistributorResponse) ProtoMessage() {}

func (x *CreateDistributorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_distributor_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDistributorResponse.ProtoReflect.Descriptor instead.
func (*CreateDistributorResponse) Descriptor() ([]byte, []int) {
	return file_distributor_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateDistributorResponse) GetDistributor() *Distributor {
	if x != nil {
		return x.Distributor
	}
	return nil
}

type UpdateDistributorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Distributor *Distributor `protobuf:"bytes,1,opt,name=distributor,proto3" json:"distributor,omitempty"`
}

func (x *UpdateDistributorResponse) Reset() {
	*x = UpdateDistributorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributor_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDistributorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDistributorResponse) ProtoMessage() {}

func (x *UpdateDistributorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_distributor_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDistributorResponse.ProtoReflect.Descriptor instead.
func (*UpdateDistributorResponse) Descriptor() ([]byte, []int) {
	return file_distributor_service_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateDistributorResponse) GetDistributor() *Distributor {
	if x != nil {
		return x.Distributor
	}
	return nil
}

type DeleteDistributorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteDistributorRequest) Reset() {
	*x = DeleteDistributorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributor_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDistributorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDistributorRequest) ProtoMessage() {}

func (x *DeleteDistributorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_distributor_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDistributorRequest.ProtoReflect.Descriptor instead.
func (*DeleteDistributorRequest) Descriptor() ([]byte, []int) {
	return file_distributor_service_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteDistributorRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDistributorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDistributorRequest) Reset() {
	*x = GetDistributorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributor_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDistributorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDistributorRequest) ProtoMessage() {}

func (x *GetDistributorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_distributor_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDistributorRequest.ProtoReflect.Descriptor instead.
func (*GetDistributorRequest) Descriptor() ([]byte, []int) {
	return file_distributor_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetDistributorRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDistributorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Distributor *Distributor `protobuf:"bytes,1,opt,name=distributor,proto3" json:"distributor,omitempty"`
}

func (x *GetDistributorResponse) Reset() {
	*x = GetDistributorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributor_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDistributorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDistributorResponse) ProtoMessage() {}

func (x *GetDistributorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_distributor_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDistributorResponse.ProtoReflect.Descriptor instead.
func (*GetDistributorResponse) Descriptor() ([]byte, []int) {
	return file_distributor_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetDistributorResponse) GetDistributor() *Distributor {
	if x != nil {
		return x.Distributor
	}
	return nil
}

type GetAllDistributorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit uint64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page  uint64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetAllDistributorsRequest) Reset() {
	*x = GetAllDistributorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributor_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllDistributorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllDistributorsRequest) ProtoMessage() {}

func (x *GetAllDistributorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_distributor_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllDistributorsRequest.ProtoReflect.Descriptor instead.
func (*GetAllDistributorsRequest) Descriptor() ([]byte, []int) {
	return file_distributor_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllDistributorsRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAllDistributorsRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetAllDistributorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Distributors []*Distributor `protobuf:"bytes,1,rep,name=distributors,proto3" json:"distributors,omitempty"`
	Count        uint64         `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetAllDistributorsResponse) Reset() {
	*x = GetAllDistributorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributor_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllDistributorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllDistributorsResponse) ProtoMessage() {}

func (x *GetAllDistributorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_distributor_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllDistributorsResponse.ProtoReflect.Descriptor instead.
func (*GetAllDistributorsResponse) Descriptor() ([]byte, []int) {
	return file_distributor_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllDistributorsResponse) GetDistributors() []*Distributor {
	if x != nil {
		return x.Distributors
	}
	return nil
}

func (x *GetAllDistributorsResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CreateParkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Park *Park `protobuf:"bytes,1,opt,name=park,proto3" json:"park,omitempty"`
}

func (x *CreateParkResponse) Reset() {
	*x = CreateParkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributor_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateParkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateParkResponse) ProtoMessage() {}

func (x *CreateParkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_distributor_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateParkResponse.ProtoReflect.Descriptor instead.
func (*CreateParkResponse) Descriptor() ([]byte, []int) {
	return file_distributor_service_proto_rawDescGZIP(), []int{7}
}

func (x *CreateParkResponse) GetPark() *Park {
	if x != nil {
		return x.Park
	}
	return nil
}

type UpdateParkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Park *Park `protobuf:"bytes,1,opt,name=park,proto3" json:"park,omitempty"`
}

func (x *UpdateParkResponse) Reset() {
	*x = UpdateParkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributor_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateParkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateParkResponse) ProtoMessage() {}

func (x *UpdateParkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_distributor_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateParkResponse.ProtoReflect.Descriptor instead.
func (*UpdateParkResponse) Descriptor() ([]byte, []int) {
	return file_distributor_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateParkResponse) GetPark() *Park {
	if x != nil {
		return x.Park
	}
	return nil
}

type DeleteParkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteParkRequest) Reset() {
	*x = DeleteParkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributor_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteParkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteParkRequest) ProtoMessage() {}

func (x *DeleteParkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_distributor_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteParkRequest.ProtoReflect.Descriptor instead.
func (*DeleteParkRequest) Descriptor() ([]byte, []int) {
	return file_distributor_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteParkRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetParkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetParkRequest) Reset() {
	*x = GetParkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributor_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetParkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParkRequest) ProtoMessage() {}

func (x *GetParkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_distributor_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParkRequest.ProtoReflect.Descriptor instead.
func (*GetParkRequest) Descriptor() ([]byte, []int) {
	return file_distributor_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetParkRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetParkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Park *Park `protobuf:"bytes,1,opt,name=park,proto3" json:"park,omitempty"`
}

func (x *GetParkResponse) Reset() {
	*x = GetParkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributor_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetParkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParkResponse) ProtoMessage() {}

func (x *GetParkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_distributor_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParkResponse.ProtoReflect.Descriptor instead.
func (*GetParkResponse) Descriptor() ([]byte, []int) {
	return file_distributor_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetParkResponse) GetPark() *Park {
	if x != nil {
		return x.Park
	}
	return nil
}

type GetAllParksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit uint64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page  uint64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetAllParksRequest) Reset() {
	*x = GetAllParksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributor_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllParksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllParksRequest) ProtoMessage() {}

func (x *GetAllParksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_distributor_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllParksRequest.ProtoReflect.Descriptor instead.
func (*GetAllParksRequest) Descriptor() ([]byte, []int) {
	return file_distributor_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetAllParksRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAllParksRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetAllParksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parks []*Park `protobuf:"bytes,1,rep,name=parks,proto3" json:"parks,omitempty"`
	Count uint64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetAllParksResponse) Reset() {
	*x = GetAllParksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributor_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllParksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllParksResponse) ProtoMessage() {}

func (x *GetAllParksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_distributor_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllParksResponse.ProtoReflect.Descriptor instead.
func (*GetAllParksResponse) Descriptor() ([]byte, []int) {
	return file_distributor_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetAllParksResponse) GetParks() []*Park {
	if x != nil {
		return x.Parks
	}
	return nil
}

func (x *GetAllParksResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetAllDistributorParksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit uint64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page  uint64 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetAllDistributorParksRequest) Reset() {
	*x = GetAllDistributorParksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributor_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllDistributorParksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllDistributorParksRequest) ProtoMessage() {}

func (x *GetAllDistributorParksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_distributor_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllDistributorParksRequest.ProtoReflect.Descriptor instead.
func (*GetAllDistributorParksRequest) Descriptor() ([]byte, []int) {
	return file_distributor_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetAllDistributorParksRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAllDistributorParksRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetAllDistributorParksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parks []*Park `protobuf:"bytes,1,rep,name=parks,proto3" json:"parks,omitempty"`
	Count uint64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetAllDistributorParksResponse) Reset() {
	*x = GetAllDistributorParksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distributor_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllDistributorParksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllDistributorParksResponse) ProtoMessage() {}

func (x *GetAllDistributorParksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_distributor_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllDistributorParksResponse.ProtoReflect.Descriptor instead.
func (*GetAllDistributorParksResponse) Descriptor() ([]byte, []int) {
	return file_distributor_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetAllDistributorParksResponse) GetParks() []*Park {
	if x != nil {
		return x.Parks
	}
	return nil
}

func (x *GetAllDistributorParksResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_distributor_service_proto protoreflect.FileDescriptor

var file_distributor_service_proto_rawDesc = []byte{
	0x0a, 0x19, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x54, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x22, 0x54, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f,
	0x72, 0x22, 0x2a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x27, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x22, 0x45, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x22, 0x6d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x0c, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x38, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x61, 0x72, 0x6b, 0x52, 0x04, 0x70, 0x61, 0x72, 0x6b, 0x22, 0x38, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x6b, 0x52, 0x04, 0x70,
	0x61, 0x72, 0x6b, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a,
	0x04, 0x70, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x6b, 0x52, 0x04, 0x70, 0x61, 0x72,
	0x6b, 0x22, 0x3e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x51, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x6b,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x6b, 0x52, 0x05, 0x70, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x49, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22,
	0x5c, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x24, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x6b,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xe6, 0x06,
	0x0a, 0x12, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x15,
	0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x6f, 0x72, 0x1a, 0x23, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x1a, 0x23, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72,
	0x73, 0x12, 0x23, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x6b, 0x12, 0x0e, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x61, 0x72, 0x6b, 0x1a, 0x1c, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x6b, 0x12, 0x0e, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61,
	0x72, 0x6b, 0x1a, 0x1c, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x40, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61,
	0x72, 0x6b, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x27, 0x2e, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x6f, 0x72, 0x50, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x6b, 0x12,
	0x1b, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x1a, 0x5a, 0x18, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_distributor_service_proto_rawDescOnce sync.Once
	file_distributor_service_proto_rawDescData = file_distributor_service_proto_rawDesc
)

func file_distributor_service_proto_rawDescGZIP() []byte {
	file_distributor_service_proto_rawDescOnce.Do(func() {
		file_distributor_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_distributor_service_proto_rawDescData)
	})
	return file_distributor_service_proto_rawDescData
}

var file_distributor_service_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_distributor_service_proto_goTypes = []interface{}{
	(*CreateDistributorResponse)(nil),      // 0: genproto.CreateDistributorResponse
	(*UpdateDistributorResponse)(nil),      // 1: genproto.UpdateDistributorResponse
	(*DeleteDistributorRequest)(nil),       // 2: genproto.DeleteDistributorRequest
	(*GetDistributorRequest)(nil),          // 3: genproto.GetDistributorRequest
	(*GetDistributorResponse)(nil),         // 4: genproto.GetDistributorResponse
	(*GetAllDistributorsRequest)(nil),      // 5: genproto.GetAllDistributorsRequest
	(*GetAllDistributorsResponse)(nil),     // 6: genproto.GetAllDistributorsResponse
	(*CreateParkResponse)(nil),             // 7: genproto.CreateParkResponse
	(*UpdateParkResponse)(nil),             // 8: genproto.UpdateParkResponse
	(*DeleteParkRequest)(nil),              // 9: genproto.DeleteParkRequest
	(*GetParkRequest)(nil),                 // 10: genproto.GetParkRequest
	(*GetParkResponse)(nil),                // 11: genproto.GetParkResponse
	(*GetAllParksRequest)(nil),             // 12: genproto.GetAllParksRequest
	(*GetAllParksResponse)(nil),            // 13: genproto.GetAllParksResponse
	(*GetAllDistributorParksRequest)(nil),  // 14: genproto.GetAllDistributorParksRequest
	(*GetAllDistributorParksResponse)(nil), // 15: genproto.GetAllDistributorParksResponse
	(*Distributor)(nil),                    // 16: genproto.Distributor
	(*Park)(nil),                           // 17: genproto.Park
	(*empty.Empty)(nil),                    // 18: google.protobuf.Empty
}
var file_distributor_service_proto_depIdxs = []int32{
	16, // 0: genproto.CreateDistributorResponse.distributor:type_name -> genproto.Distributor
	16, // 1: genproto.UpdateDistributorResponse.distributor:type_name -> genproto.Distributor
	16, // 2: genproto.GetDistributorResponse.distributor:type_name -> genproto.Distributor
	16, // 3: genproto.GetAllDistributorsResponse.distributors:type_name -> genproto.Distributor
	17, // 4: genproto.CreateParkResponse.park:type_name -> genproto.Park
	17, // 5: genproto.UpdateParkResponse.park:type_name -> genproto.Park
	17, // 6: genproto.GetParkResponse.park:type_name -> genproto.Park
	17, // 7: genproto.GetAllParksResponse.parks:type_name -> genproto.Park
	17, // 8: genproto.GetAllDistributorParksResponse.parks:type_name -> genproto.Park
	16, // 9: genproto.DistributorService.Create:input_type -> genproto.Distributor
	16, // 10: genproto.DistributorService.Update:input_type -> genproto.Distributor
	3,  // 11: genproto.DistributorService.GetDistributor:input_type -> genproto.GetDistributorRequest
	5,  // 12: genproto.DistributorService.GetAllDistributors:input_type -> genproto.GetAllDistributorsRequest
	2,  // 13: genproto.DistributorService.Delete:input_type -> genproto.DeleteDistributorRequest
	17, // 14: genproto.DistributorService.CreatePark:input_type -> genproto.Park
	17, // 15: genproto.DistributorService.UpdatePark:input_type -> genproto.Park
	10, // 16: genproto.DistributorService.GetPark:input_type -> genproto.GetParkRequest
	12, // 17: genproto.DistributorService.GetAllParks:input_type -> genproto.GetAllParksRequest
	14, // 18: genproto.DistributorService.GetAllDistributorParks:input_type -> genproto.GetAllDistributorParksRequest
	9,  // 19: genproto.DistributorService.DeletePark:input_type -> genproto.DeleteParkRequest
	0,  // 20: genproto.DistributorService.Create:output_type -> genproto.CreateDistributorResponse
	1,  // 21: genproto.DistributorService.Update:output_type -> genproto.UpdateDistributorResponse
	4,  // 22: genproto.DistributorService.GetDistributor:output_type -> genproto.GetDistributorResponse
	6,  // 23: genproto.DistributorService.GetAllDistributors:output_type -> genproto.GetAllDistributorsResponse
	18, // 24: genproto.DistributorService.Delete:output_type -> google.protobuf.Empty
	7,  // 25: genproto.DistributorService.CreatePark:output_type -> genproto.CreateParkResponse
	8,  // 26: genproto.DistributorService.UpdatePark:output_type -> genproto.UpdateParkResponse
	11, // 27: genproto.DistributorService.GetPark:output_type -> genproto.GetParkResponse
	13, // 28: genproto.DistributorService.GetAllParks:output_type -> genproto.GetAllParksResponse
	15, // 29: genproto.DistributorService.GetAllDistributorParks:output_type -> genproto.GetAllDistributorParksResponse
	18, // 30: genproto.DistributorService.DeletePark:output_type -> google.protobuf.Empty
	20, // [20:31] is the sub-list for method output_type
	9,  // [9:20] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_distributor_service_proto_init() }
func file_distributor_service_proto_init() {
	if File_distributor_service_proto != nil {
		return
	}
	file_distributor_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_distributor_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDistributorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distributor_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDistributorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distributor_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDistributorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distributor_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDistributorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distributor_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDistributorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distributor_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllDistributorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distributor_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllDistributorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distributor_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateParkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distributor_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateParkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distributor_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteParkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distributor_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetParkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distributor_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetParkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distributor_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllParksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distributor_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllParksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distributor_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllDistributorParksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distributor_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllDistributorParksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_distributor_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_distributor_service_proto_goTypes,
		DependencyIndexes: file_distributor_service_proto_depIdxs,
		MessageInfos:      file_distributor_service_proto_msgTypes,
	}.Build()
	File_distributor_service_proto = out.File
	file_distributor_service_proto_rawDesc = nil
	file_distributor_service_proto_goTypes = nil
	file_distributor_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DistributorServiceClient is the client API for DistributorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DistributorServiceClient interface {
	Create(ctx context.Context, in *Distributor, opts ...grpc.CallOption) (*CreateDistributorResponse, error)
	Update(ctx context.Context, in *Distributor, opts ...grpc.CallOption) (*UpdateDistributorResponse, error)
	GetDistributor(ctx context.Context, in *GetDistributorRequest, opts ...grpc.CallOption) (*GetDistributorResponse, error)
	GetAllDistributors(ctx context.Context, in *GetAllDistributorsRequest, opts ...grpc.CallOption) (*GetAllDistributorsResponse, error)
	Delete(ctx context.Context, in *DeleteDistributorRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CreatePark(ctx context.Context, in *Park, opts ...grpc.CallOption) (*CreateParkResponse, error)
	UpdatePark(ctx context.Context, in *Park, opts ...grpc.CallOption) (*UpdateParkResponse, error)
	GetPark(ctx context.Context, in *GetParkRequest, opts ...grpc.CallOption) (*GetParkResponse, error)
	GetAllParks(ctx context.Context, in *GetAllParksRequest, opts ...grpc.CallOption) (*GetAllParksResponse, error)
	GetAllDistributorParks(ctx context.Context, in *GetAllDistributorParksRequest, opts ...grpc.CallOption) (*GetAllDistributorParksResponse, error)
	DeletePark(ctx context.Context, in *DeleteParkRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type distributorServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDistributorServiceClient(cc grpc.ClientConnInterface) DistributorServiceClient {
	return &distributorServiceClient{cc}
}

func (c *distributorServiceClient) Create(ctx context.Context, in *Distributor, opts ...grpc.CallOption) (*CreateDistributorResponse, error) {
	out := new(CreateDistributorResponse)
	err := c.cc.Invoke(ctx, "/genproto.DistributorService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *distributorServiceClient) Update(ctx context.Context, in *Distributor, opts ...grpc.CallOption) (*UpdateDistributorResponse, error) {
	out := new(UpdateDistributorResponse)
	err := c.cc.Invoke(ctx, "/genproto.DistributorService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *distributorServiceClient) GetDistributor(ctx context.Context, in *GetDistributorRequest, opts ...grpc.CallOption) (*GetDistributorResponse, error) {
	out := new(GetDistributorResponse)
	err := c.cc.Invoke(ctx, "/genproto.DistributorService/GetDistributor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *distributorServiceClient) GetAllDistributors(ctx context.Context, in *GetAllDistributorsRequest, opts ...grpc.CallOption) (*GetAllDistributorsResponse, error) {
	out := new(GetAllDistributorsResponse)
	err := c.cc.Invoke(ctx, "/genproto.DistributorService/GetAllDistributors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *distributorServiceClient) Delete(ctx context.Context, in *DeleteDistributorRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.DistributorService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *distributorServiceClient) CreatePark(ctx context.Context, in *Park, opts ...grpc.CallOption) (*CreateParkResponse, error) {
	out := new(CreateParkResponse)
	err := c.cc.Invoke(ctx, "/genproto.DistributorService/CreatePark", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *distributorServiceClient) UpdatePark(ctx context.Context, in *Park, opts ...grpc.CallOption) (*UpdateParkResponse, error) {
	out := new(UpdateParkResponse)
	err := c.cc.Invoke(ctx, "/genproto.DistributorService/UpdatePark", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *distributorServiceClient) GetPark(ctx context.Context, in *GetParkRequest, opts ...grpc.CallOption) (*GetParkResponse, error) {
	out := new(GetParkResponse)
	err := c.cc.Invoke(ctx, "/genproto.DistributorService/GetPark", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *distributorServiceClient) GetAllParks(ctx context.Context, in *GetAllParksRequest, opts ...grpc.CallOption) (*GetAllParksResponse, error) {
	out := new(GetAllParksResponse)
	err := c.cc.Invoke(ctx, "/genproto.DistributorService/GetAllParks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *distributorServiceClient) GetAllDistributorParks(ctx context.Context, in *GetAllDistributorParksRequest, opts ...grpc.CallOption) (*GetAllDistributorParksResponse, error) {
	out := new(GetAllDistributorParksResponse)
	err := c.cc.Invoke(ctx, "/genproto.DistributorService/GetAllDistributorParks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *distributorServiceClient) DeletePark(ctx context.Context, in *DeleteParkRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.DistributorService/DeletePark", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DistributorServiceServer is the server API for DistributorService service.
type DistributorServiceServer interface {
	Create(context.Context, *Distributor) (*CreateDistributorResponse, error)
	Update(context.Context, *Distributor) (*UpdateDistributorResponse, error)
	GetDistributor(context.Context, *GetDistributorRequest) (*GetDistributorResponse, error)
	GetAllDistributors(context.Context, *GetAllDistributorsRequest) (*GetAllDistributorsResponse, error)
	Delete(context.Context, *DeleteDistributorRequest) (*empty.Empty, error)
	CreatePark(context.Context, *Park) (*CreateParkResponse, error)
	UpdatePark(context.Context, *Park) (*UpdateParkResponse, error)
	GetPark(context.Context, *GetParkRequest) (*GetParkResponse, error)
	GetAllParks(context.Context, *GetAllParksRequest) (*GetAllParksResponse, error)
	GetAllDistributorParks(context.Context, *GetAllDistributorParksRequest) (*GetAllDistributorParksResponse, error)
	DeletePark(context.Context, *DeleteParkRequest) (*empty.Empty, error)
}

// UnimplementedDistributorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDistributorServiceServer struct {
}

func (*UnimplementedDistributorServiceServer) Create(context.Context, *Distributor) (*CreateDistributorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedDistributorServiceServer) Update(context.Context, *Distributor) (*UpdateDistributorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedDistributorServiceServer) GetDistributor(context.Context, *GetDistributorRequest) (*GetDistributorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDistributor not implemented")
}
func (*UnimplementedDistributorServiceServer) GetAllDistributors(context.Context, *GetAllDistributorsRequest) (*GetAllDistributorsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllDistributors not implemented")
}
func (*UnimplementedDistributorServiceServer) Delete(context.Context, *DeleteDistributorRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedDistributorServiceServer) CreatePark(context.Context, *Park) (*CreateParkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePark not implemented")
}
func (*UnimplementedDistributorServiceServer) UpdatePark(context.Context, *Park) (*UpdateParkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePark not implemented")
}
func (*UnimplementedDistributorServiceServer) GetPark(context.Context, *GetParkRequest) (*GetParkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPark not implemented")
}
func (*UnimplementedDistributorServiceServer) GetAllParks(context.Context, *GetAllParksRequest) (*GetAllParksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllParks not implemented")
}
func (*UnimplementedDistributorServiceServer) GetAllDistributorParks(context.Context, *GetAllDistributorParksRequest) (*GetAllDistributorParksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllDistributorParks not implemented")
}
func (*UnimplementedDistributorServiceServer) DeletePark(context.Context, *DeleteParkRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePark not implemented")
}

func RegisterDistributorServiceServer(s *grpc.Server, srv DistributorServiceServer) {
	s.RegisterService(&_DistributorService_serviceDesc, srv)
}

func _DistributorService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Distributor)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DistributorServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.DistributorService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DistributorServiceServer).Create(ctx, req.(*Distributor))
	}
	return interceptor(ctx, in, info, handler)
}

func _DistributorService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Distributor)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DistributorServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.DistributorService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DistributorServiceServer).Update(ctx, req.(*Distributor))
	}
	return interceptor(ctx, in, info, handler)
}

func _DistributorService_GetDistributor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDistributorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DistributorServiceServer).GetDistributor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.DistributorService/GetDistributor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DistributorServiceServer).GetDistributor(ctx, req.(*GetDistributorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DistributorService_GetAllDistributors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllDistributorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DistributorServiceServer).GetAllDistributors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.DistributorService/GetAllDistributors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DistributorServiceServer).GetAllDistributors(ctx, req.(*GetAllDistributorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DistributorService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDistributorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DistributorServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.DistributorService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DistributorServiceServer).Delete(ctx, req.(*DeleteDistributorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DistributorService_CreatePark_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Park)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DistributorServiceServer).CreatePark(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.DistributorService/CreatePark",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DistributorServiceServer).CreatePark(ctx, req.(*Park))
	}
	return interceptor(ctx, in, info, handler)
}

func _DistributorService_UpdatePark_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Park)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DistributorServiceServer).UpdatePark(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.DistributorService/UpdatePark",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DistributorServiceServer).UpdatePark(ctx, req.(*Park))
	}
	return interceptor(ctx, in, info, handler)
}

func _DistributorService_GetPark_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetParkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DistributorServiceServer).GetPark(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.DistributorService/GetPark",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DistributorServiceServer).GetPark(ctx, req.(*GetParkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DistributorService_GetAllParks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllParksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DistributorServiceServer).GetAllParks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.DistributorService/GetAllParks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DistributorServiceServer).GetAllParks(ctx, req.(*GetAllParksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DistributorService_GetAllDistributorParks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllDistributorParksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DistributorServiceServer).GetAllDistributorParks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.DistributorService/GetAllDistributorParks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DistributorServiceServer).GetAllDistributorParks(ctx, req.(*GetAllDistributorParksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DistributorService_DeletePark_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteParkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DistributorServiceServer).DeletePark(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.DistributorService/DeletePark",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DistributorServiceServer).DeletePark(ctx, req.(*DeleteParkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DistributorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.DistributorService",
	HandlerType: (*DistributorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _DistributorService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _DistributorService_Update_Handler,
		},
		{
			MethodName: "GetDistributor",
			Handler:    _DistributorService_GetDistributor_Handler,
		},
		{
			MethodName: "GetAllDistributors",
			Handler:    _DistributorService_GetAllDistributors_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _DistributorService_Delete_Handler,
		},
		{
			MethodName: "CreatePark",
			Handler:    _DistributorService_CreatePark_Handler,
		},
		{
			MethodName: "UpdatePark",
			Handler:    _DistributorService_UpdatePark_Handler,
		},
		{
			MethodName: "GetPark",
			Handler:    _DistributorService_GetPark_Handler,
		},
		{
			MethodName: "GetAllParks",
			Handler:    _DistributorService_GetAllParks_Handler,
		},
		{
			MethodName: "GetAllDistributorParks",
			Handler:    _DistributorService_GetAllDistributorParks_Handler,
		},
		{
			MethodName: "DeletePark",
			Handler:    _DistributorService_DeletePark_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "distributor_service.proto",
}
