// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: payme_info_service.proto

package user_service

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PaymeInfoId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BranchId string `protobuf:"bytes,2,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
}

func (x *PaymeInfoId) Reset() {
	*x = PaymeInfoId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payme_info_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymeInfoId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymeInfoId) ProtoMessage() {}

func (x *PaymeInfoId) ProtoReflect() protoreflect.Message {
	mi := &file_payme_info_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymeInfoId.ProtoReflect.Descriptor instead.
func (*PaymeInfoId) Descriptor() ([]byte, []int) {
	return file_payme_info_service_proto_rawDescGZIP(), []int{0}
}

func (x *PaymeInfoId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PaymeInfoId) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

type GetAllPaymeInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShipperId string `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	Search    string `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
	Page      uint64 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit     uint64 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetAllPaymeInfoRequest) Reset() {
	*x = GetAllPaymeInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payme_info_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPaymeInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPaymeInfoRequest) ProtoMessage() {}

func (x *GetAllPaymeInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payme_info_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPaymeInfoRequest.ProtoReflect.Descriptor instead.
func (*GetAllPaymeInfoRequest) Descriptor() ([]byte, []int) {
	return file_payme_info_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetAllPaymeInfoRequest) GetShipperId() string {
	if x != nil {
		return x.ShipperId
	}
	return ""
}

func (x *GetAllPaymeInfoRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetAllPaymeInfoRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAllPaymeInfoRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAllPaymeInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymeInfos []*Payme `protobuf:"bytes,1,rep,name=payme_infos,json=paymeInfos,proto3" json:"payme_infos,omitempty"`
	Count      uint64   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetAllPaymeInfoResponse) Reset() {
	*x = GetAllPaymeInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payme_info_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPaymeInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPaymeInfoResponse) ProtoMessage() {}

func (x *GetAllPaymeInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payme_info_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPaymeInfoResponse.ProtoReflect.Descriptor instead.
func (*GetAllPaymeInfoResponse) Descriptor() ([]byte, []int) {
	return file_payme_info_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetAllPaymeInfoResponse) GetPaymeInfos() []*Payme {
	if x != nil {
		return x.PaymeInfos
	}
	return nil
}

func (x *GetAllPaymeInfoResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_payme_info_service_proto protoreflect.FileDescriptor

var file_payme_info_service_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x3a, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x22,
	0x79, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x69,
	0x70, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x61, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0x88, 0x03,
	0x0a, 0x10, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x1a, 0x15, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x64, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x15, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x64, 0x1a, 0x0f, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x12, 0x20, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x0f, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x39, 0x0a,
	0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x64, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x42, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x12, 0x1a, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x1a,
	0x15, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x64, 0x22, 0x00, 0x42, 0x17, 0x5a, 0x15, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_payme_info_service_proto_rawDescOnce sync.Once
	file_payme_info_service_proto_rawDescData = file_payme_info_service_proto_rawDesc
)

func file_payme_info_service_proto_rawDescGZIP() []byte {
	file_payme_info_service_proto_rawDescOnce.Do(func() {
		file_payme_info_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_payme_info_service_proto_rawDescData)
	})
	return file_payme_info_service_proto_rawDescData
}

var file_payme_info_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_payme_info_service_proto_goTypes = []interface{}{
	(*PaymeInfoId)(nil),             // 0: genproto.PaymeInfoId
	(*GetAllPaymeInfoRequest)(nil),  // 1: genproto.GetAllPaymeInfoRequest
	(*GetAllPaymeInfoResponse)(nil), // 2: genproto.GetAllPaymeInfoResponse
	(*Payme)(nil),                   // 3: genproto.Payme
	(*PaymeCredentials)(nil),        // 4: genproto.PaymeCredentials
	(*empty.Empty)(nil),             // 5: google.protobuf.Empty
}
var file_payme_info_service_proto_depIdxs = []int32{
	3, // 0: genproto.GetAllPaymeInfoResponse.payme_infos:type_name -> genproto.Payme
	3, // 1: genproto.PaymeInfoService.Create:input_type -> genproto.Payme
	0, // 2: genproto.PaymeInfoService.Get:input_type -> genproto.PaymeInfoId
	1, // 3: genproto.PaymeInfoService.GetAll:input_type -> genproto.GetAllPaymeInfoRequest
	3, // 4: genproto.PaymeInfoService.Update:input_type -> genproto.Payme
	0, // 5: genproto.PaymeInfoService.Delete:input_type -> genproto.PaymeInfoId
	4, // 6: genproto.PaymeInfoService.GetShipperByCredentials:input_type -> genproto.PaymeCredentials
	0, // 7: genproto.PaymeInfoService.Create:output_type -> genproto.PaymeInfoId
	3, // 8: genproto.PaymeInfoService.Get:output_type -> genproto.Payme
	2, // 9: genproto.PaymeInfoService.GetAll:output_type -> genproto.GetAllPaymeInfoResponse
	5, // 10: genproto.PaymeInfoService.Update:output_type -> google.protobuf.Empty
	5, // 11: genproto.PaymeInfoService.Delete:output_type -> google.protobuf.Empty
	0, // 12: genproto.PaymeInfoService.GetShipperByCredentials:output_type -> genproto.PaymeInfoId
	7, // [7:13] is the sub-list for method output_type
	1, // [1:7] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_payme_info_service_proto_init() }
func file_payme_info_service_proto_init() {
	if File_payme_info_service_proto != nil {
		return
	}
	file_payme_info_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_payme_info_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymeInfoId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payme_info_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPaymeInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payme_info_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPaymeInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_payme_info_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_payme_info_service_proto_goTypes,
		DependencyIndexes: file_payme_info_service_proto_depIdxs,
		MessageInfos:      file_payme_info_service_proto_msgTypes,
	}.Build()
	File_payme_info_service_proto = out.File
	file_payme_info_service_proto_rawDesc = nil
	file_payme_info_service_proto_goTypes = nil
	file_payme_info_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PaymeInfoServiceClient is the client API for PaymeInfoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PaymeInfoServiceClient interface {
	Create(ctx context.Context, in *Payme, opts ...grpc.CallOption) (*PaymeInfoId, error)
	Get(ctx context.Context, in *PaymeInfoId, opts ...grpc.CallOption) (*Payme, error)
	GetAll(ctx context.Context, in *GetAllPaymeInfoRequest, opts ...grpc.CallOption) (*GetAllPaymeInfoResponse, error)
	Update(ctx context.Context, in *Payme, opts ...grpc.CallOption) (*empty.Empty, error)
	Delete(ctx context.Context, in *PaymeInfoId, opts ...grpc.CallOption) (*empty.Empty, error)
	GetShipperByCredentials(ctx context.Context, in *PaymeCredentials, opts ...grpc.CallOption) (*PaymeInfoId, error)
}

type paymeInfoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPaymeInfoServiceClient(cc grpc.ClientConnInterface) PaymeInfoServiceClient {
	return &paymeInfoServiceClient{cc}
}

func (c *paymeInfoServiceClient) Create(ctx context.Context, in *Payme, opts ...grpc.CallOption) (*PaymeInfoId, error) {
	out := new(PaymeInfoId)
	err := c.cc.Invoke(ctx, "/genproto.PaymeInfoService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymeInfoServiceClient) Get(ctx context.Context, in *PaymeInfoId, opts ...grpc.CallOption) (*Payme, error) {
	out := new(Payme)
	err := c.cc.Invoke(ctx, "/genproto.PaymeInfoService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymeInfoServiceClient) GetAll(ctx context.Context, in *GetAllPaymeInfoRequest, opts ...grpc.CallOption) (*GetAllPaymeInfoResponse, error) {
	out := new(GetAllPaymeInfoResponse)
	err := c.cc.Invoke(ctx, "/genproto.PaymeInfoService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymeInfoServiceClient) Update(ctx context.Context, in *Payme, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.PaymeInfoService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymeInfoServiceClient) Delete(ctx context.Context, in *PaymeInfoId, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.PaymeInfoService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymeInfoServiceClient) GetShipperByCredentials(ctx context.Context, in *PaymeCredentials, opts ...grpc.CallOption) (*PaymeInfoId, error) {
	out := new(PaymeInfoId)
	err := c.cc.Invoke(ctx, "/genproto.PaymeInfoService/GetShipperByCredentials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PaymeInfoServiceServer is the server API for PaymeInfoService service.
type PaymeInfoServiceServer interface {
	Create(context.Context, *Payme) (*PaymeInfoId, error)
	Get(context.Context, *PaymeInfoId) (*Payme, error)
	GetAll(context.Context, *GetAllPaymeInfoRequest) (*GetAllPaymeInfoResponse, error)
	Update(context.Context, *Payme) (*empty.Empty, error)
	Delete(context.Context, *PaymeInfoId) (*empty.Empty, error)
	GetShipperByCredentials(context.Context, *PaymeCredentials) (*PaymeInfoId, error)
}

// UnimplementedPaymeInfoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPaymeInfoServiceServer struct {
}

func (*UnimplementedPaymeInfoServiceServer) Create(context.Context, *Payme) (*PaymeInfoId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedPaymeInfoServiceServer) Get(context.Context, *PaymeInfoId) (*Payme, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedPaymeInfoServiceServer) GetAll(context.Context, *GetAllPaymeInfoRequest) (*GetAllPaymeInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedPaymeInfoServiceServer) Update(context.Context, *Payme) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedPaymeInfoServiceServer) Delete(context.Context, *PaymeInfoId) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedPaymeInfoServiceServer) GetShipperByCredentials(context.Context, *PaymeCredentials) (*PaymeInfoId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShipperByCredentials not implemented")
}

func RegisterPaymeInfoServiceServer(s *grpc.Server, srv PaymeInfoServiceServer) {
	s.RegisterService(&_PaymeInfoService_serviceDesc, srv)
}

func _PaymeInfoService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Payme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymeInfoServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.PaymeInfoService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymeInfoServiceServer).Create(ctx, req.(*Payme))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymeInfoService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymeInfoId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymeInfoServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.PaymeInfoService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymeInfoServiceServer).Get(ctx, req.(*PaymeInfoId))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymeInfoService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllPaymeInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymeInfoServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.PaymeInfoService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymeInfoServiceServer).GetAll(ctx, req.(*GetAllPaymeInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymeInfoService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Payme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymeInfoServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.PaymeInfoService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymeInfoServiceServer).Update(ctx, req.(*Payme))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymeInfoService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymeInfoId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymeInfoServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.PaymeInfoService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymeInfoServiceServer).Delete(ctx, req.(*PaymeInfoId))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymeInfoService_GetShipperByCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymeCredentials)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymeInfoServiceServer).GetShipperByCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.PaymeInfoService/GetShipperByCredentials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymeInfoServiceServer).GetShipperByCredentials(ctx, req.(*PaymeCredentials))
	}
	return interceptor(ctx, in, info, handler)
}

var _PaymeInfoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.PaymeInfoService",
	HandlerType: (*PaymeInfoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _PaymeInfoService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _PaymeInfoService_Get_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _PaymeInfoService_GetAll_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _PaymeInfoService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _PaymeInfoService_Delete_Handler,
		},
		{
			MethodName: "GetShipperByCredentials",
			Handler:    _PaymeInfoService_GetShipperByCredentials_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "payme_info_service.proto",
}
