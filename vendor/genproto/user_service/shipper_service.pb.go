// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: shipper_service.proto

package user_service

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetShipperByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetShipperByNameRequest) Reset() {
	*x = GetShipperByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShipperByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShipperByNameRequest) ProtoMessage() {}

func (x *GetShipperByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShipperByNameRequest.ProtoReflect.Descriptor instead.
func (*GetShipperByNameRequest) Descriptor() ([]byte, []int) {
	return file_shipper_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetShipperByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ShipperId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ShipperId) Reset() {
	*x = ShipperId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShipperId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShipperId) ProtoMessage() {}

func (x *ShipperId) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShipperId.ProtoReflect.Descriptor instead.
func (*ShipperId) Descriptor() ([]byte, []int) {
	return file_shipper_service_proto_rawDescGZIP(), []int{1}
}

func (x *ShipperId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAllShippersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit   uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	HasIiko bool   `protobuf:"varint,3,opt,name=has_iiko,json=hasIiko,proto3" json:"has_iiko,omitempty"`
}

func (x *GetAllShippersRequest) Reset() {
	*x = GetAllShippersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllShippersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllShippersRequest) ProtoMessage() {}

func (x *GetAllShippersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllShippersRequest.ProtoReflect.Descriptor instead.
func (*GetAllShippersRequest) Descriptor() ([]byte, []int) {
	return file_shipper_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetAllShippersRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAllShippersRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAllShippersRequest) GetHasIiko() bool {
	if x != nil {
		return x.HasIiko
	}
	return false
}

type GetAllShippersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shippers []*Shipper `protobuf:"bytes,1,rep,name=shippers,proto3" json:"shippers,omitempty"`
	Count    uint64     `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetAllShippersResponse) Reset() {
	*x = GetAllShippersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllShippersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllShippersResponse) ProtoMessage() {}

func (x *GetAllShippersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllShippersResponse.ProtoReflect.Descriptor instead.
func (*GetAllShippersResponse) Descriptor() ([]byte, []int) {
	return file_shipper_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllShippersResponse) GetShippers() []*Shipper {
	if x != nil {
		return x.Shippers
	}
	return nil
}

func (x *GetAllShippersResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_shipper_service_proto protoreflect.FileDescriptor

var file_shipper_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2d, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1b, 0x0a, 0x09,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5c, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x68, 0x61, 0x73, 0x5f, 0x69, 0x69, 0x6b, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x49, 0x69, 0x6b, 0x6f, 0x22, 0x5d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x08, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x52, 0x08, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xd6, 0x03, 0x0a, 0x0e, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x1a, 0x13, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x00, 0x12, 0x2f, 0x0a,
	0x03, 0x47, 0x65, 0x74, 0x12, 0x13, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x11, 0x2e, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x1f, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a,
	0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x13,
	0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x2e, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72,
	0x22, 0x00, 0x12, 0x5b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72,
	0x73, 0x4e, 0x6f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x68, 0x69, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x68, 0x69,
	0x70, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x17, 0x5a, 0x15, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shipper_service_proto_rawDescOnce sync.Once
	file_shipper_service_proto_rawDescData = file_shipper_service_proto_rawDesc
)

func file_shipper_service_proto_rawDescGZIP() []byte {
	file_shipper_service_proto_rawDescOnce.Do(func() {
		file_shipper_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_shipper_service_proto_rawDescData)
	})
	return file_shipper_service_proto_rawDescData
}

var file_shipper_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_shipper_service_proto_goTypes = []interface{}{
	(*GetShipperByNameRequest)(nil), // 0: genproto.GetShipperByNameRequest
	(*ShipperId)(nil),               // 1: genproto.ShipperId
	(*GetAllShippersRequest)(nil),   // 2: genproto.GetAllShippersRequest
	(*GetAllShippersResponse)(nil),  // 3: genproto.GetAllShippersResponse
	(*Shipper)(nil),                 // 4: genproto.Shipper
	(*empty.Empty)(nil),             // 5: google.protobuf.Empty
}
var file_shipper_service_proto_depIdxs = []int32{
	4, // 0: genproto.GetAllShippersResponse.shippers:type_name -> genproto.Shipper
	4, // 1: genproto.ShipperService.Create:input_type -> genproto.Shipper
	1, // 2: genproto.ShipperService.Get:input_type -> genproto.ShipperId
	2, // 3: genproto.ShipperService.GetAll:input_type -> genproto.GetAllShippersRequest
	4, // 4: genproto.ShipperService.Update:input_type -> genproto.Shipper
	1, // 5: genproto.ShipperService.Delete:input_type -> genproto.ShipperId
	0, // 6: genproto.ShipperService.GetByName:input_type -> genproto.GetShipperByNameRequest
	2, // 7: genproto.ShipperService.GetShippersNoBalance:input_type -> genproto.GetAllShippersRequest
	1, // 8: genproto.ShipperService.Create:output_type -> genproto.ShipperId
	4, // 9: genproto.ShipperService.Get:output_type -> genproto.Shipper
	3, // 10: genproto.ShipperService.GetAll:output_type -> genproto.GetAllShippersResponse
	5, // 11: genproto.ShipperService.Update:output_type -> google.protobuf.Empty
	5, // 12: genproto.ShipperService.Delete:output_type -> google.protobuf.Empty
	4, // 13: genproto.ShipperService.GetByName:output_type -> genproto.Shipper
	3, // 14: genproto.ShipperService.GetShippersNoBalance:output_type -> genproto.GetAllShippersResponse
	8, // [8:15] is the sub-list for method output_type
	1, // [1:8] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_shipper_service_proto_init() }
func file_shipper_service_proto_init() {
	if File_shipper_service_proto != nil {
		return
	}
	file_shipper_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_shipper_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShipperByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipper_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShipperId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipper_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllShippersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipper_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllShippersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shipper_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shipper_service_proto_goTypes,
		DependencyIndexes: file_shipper_service_proto_depIdxs,
		MessageInfos:      file_shipper_service_proto_msgTypes,
	}.Build()
	File_shipper_service_proto = out.File
	file_shipper_service_proto_rawDesc = nil
	file_shipper_service_proto_goTypes = nil
	file_shipper_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ShipperServiceClient is the client API for ShipperService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShipperServiceClient interface {
	Create(ctx context.Context, in *Shipper, opts ...grpc.CallOption) (*ShipperId, error)
	Get(ctx context.Context, in *ShipperId, opts ...grpc.CallOption) (*Shipper, error)
	GetAll(ctx context.Context, in *GetAllShippersRequest, opts ...grpc.CallOption) (*GetAllShippersResponse, error)
	Update(ctx context.Context, in *Shipper, opts ...grpc.CallOption) (*empty.Empty, error)
	Delete(ctx context.Context, in *ShipperId, opts ...grpc.CallOption) (*empty.Empty, error)
	GetByName(ctx context.Context, in *GetShipperByNameRequest, opts ...grpc.CallOption) (*Shipper, error)
	GetShippersNoBalance(ctx context.Context, in *GetAllShippersRequest, opts ...grpc.CallOption) (*GetAllShippersResponse, error)
}

type shipperServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewShipperServiceClient(cc grpc.ClientConnInterface) ShipperServiceClient {
	return &shipperServiceClient{cc}
}

func (c *shipperServiceClient) Create(ctx context.Context, in *Shipper, opts ...grpc.CallOption) (*ShipperId, error) {
	out := new(ShipperId)
	err := c.cc.Invoke(ctx, "/genproto.ShipperService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperServiceClient) Get(ctx context.Context, in *ShipperId, opts ...grpc.CallOption) (*Shipper, error) {
	out := new(Shipper)
	err := c.cc.Invoke(ctx, "/genproto.ShipperService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperServiceClient) GetAll(ctx context.Context, in *GetAllShippersRequest, opts ...grpc.CallOption) (*GetAllShippersResponse, error) {
	out := new(GetAllShippersResponse)
	err := c.cc.Invoke(ctx, "/genproto.ShipperService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperServiceClient) Update(ctx context.Context, in *Shipper, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.ShipperService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperServiceClient) Delete(ctx context.Context, in *ShipperId, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.ShipperService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperServiceClient) GetByName(ctx context.Context, in *GetShipperByNameRequest, opts ...grpc.CallOption) (*Shipper, error) {
	out := new(Shipper)
	err := c.cc.Invoke(ctx, "/genproto.ShipperService/GetByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperServiceClient) GetShippersNoBalance(ctx context.Context, in *GetAllShippersRequest, opts ...grpc.CallOption) (*GetAllShippersResponse, error) {
	out := new(GetAllShippersResponse)
	err := c.cc.Invoke(ctx, "/genproto.ShipperService/GetShippersNoBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShipperServiceServer is the server API for ShipperService service.
type ShipperServiceServer interface {
	Create(context.Context, *Shipper) (*ShipperId, error)
	Get(context.Context, *ShipperId) (*Shipper, error)
	GetAll(context.Context, *GetAllShippersRequest) (*GetAllShippersResponse, error)
	Update(context.Context, *Shipper) (*empty.Empty, error)
	Delete(context.Context, *ShipperId) (*empty.Empty, error)
	GetByName(context.Context, *GetShipperByNameRequest) (*Shipper, error)
	GetShippersNoBalance(context.Context, *GetAllShippersRequest) (*GetAllShippersResponse, error)
}

// UnimplementedShipperServiceServer can be embedded to have forward compatible implementations.
type UnimplementedShipperServiceServer struct {
}

func (*UnimplementedShipperServiceServer) Create(context.Context, *Shipper) (*ShipperId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedShipperServiceServer) Get(context.Context, *ShipperId) (*Shipper, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedShipperServiceServer) GetAll(context.Context, *GetAllShippersRequest) (*GetAllShippersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedShipperServiceServer) Update(context.Context, *Shipper) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedShipperServiceServer) Delete(context.Context, *ShipperId) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedShipperServiceServer) GetByName(context.Context, *GetShipperByNameRequest) (*Shipper, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByName not implemented")
}
func (*UnimplementedShipperServiceServer) GetShippersNoBalance(context.Context, *GetAllShippersRequest) (*GetAllShippersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShippersNoBalance not implemented")
}

func RegisterShipperServiceServer(s *grpc.Server, srv ShipperServiceServer) {
	s.RegisterService(&_ShipperService_serviceDesc, srv)
}

func _ShipperService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Shipper)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperServiceServer).Create(ctx, req.(*Shipper))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShipperId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperServiceServer).Get(ctx, req.(*ShipperId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllShippersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperServiceServer).GetAll(ctx, req.(*GetAllShippersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Shipper)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperServiceServer).Update(ctx, req.(*Shipper))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShipperId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperServiceServer).Delete(ctx, req.(*ShipperId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperService_GetByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShipperByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperServiceServer).GetByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperService/GetByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperServiceServer).GetByName(ctx, req.(*GetShipperByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperService_GetShippersNoBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllShippersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperServiceServer).GetShippersNoBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperService/GetShippersNoBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperServiceServer).GetShippersNoBalance(ctx, req.(*GetAllShippersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShipperService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.ShipperService",
	HandlerType: (*ShipperServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ShipperService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ShipperService_Get_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _ShipperService_GetAll_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ShipperService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ShipperService_Delete_Handler,
		},
		{
			MethodName: "GetByName",
			Handler:    _ShipperService_GetByName_Handler,
		},
		{
			MethodName: "GetShippersNoBalance",
			Handler:    _ShipperService_GetShippersNoBalance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shipper_service.proto",
}
