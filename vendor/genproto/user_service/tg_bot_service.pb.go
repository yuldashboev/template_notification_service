// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: tg_bot_service.proto

package user_service

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAllTgBotsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetAllTgBotsRequest) Reset() {
	*x = GetAllTgBotsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tg_bot_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTgBotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTgBotsRequest) ProtoMessage() {}

func (x *GetAllTgBotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tg_bot_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTgBotsRequest.ProtoReflect.Descriptor instead.
func (*GetAllTgBotsRequest) Descriptor() ([]byte, []int) {
	return file_tg_bot_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetAllTgBotsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAllTgBotsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAllTgBotsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TgBots []*TgBot `protobuf:"bytes,1,rep,name=tg_bots,json=tgBots,proto3" json:"tg_bots,omitempty"`
	Count  int64    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetAllTgBotsResponse) Reset() {
	*x = GetAllTgBotsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tg_bot_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTgBotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTgBotsResponse) ProtoMessage() {}

func (x *GetAllTgBotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tg_bot_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTgBotsResponse.ProtoReflect.Descriptor instead.
func (*GetAllTgBotsResponse) Descriptor() ([]byte, []int) {
	return file_tg_bot_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetAllTgBotsResponse) GetTgBots() []*TgBot {
	if x != nil {
		return x.TgBots
	}
	return nil
}

func (x *GetAllTgBotsResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_tg_bot_service_proto protoreflect.FileDescriptor

var file_tg_bot_service_proto_rawDesc = []byte{
	0x0a, 0x14, 0x74, 0x67, 0x5f, 0x62, 0x6f, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0c, 0x74, 0x67, 0x5f, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x3f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x67, 0x42, 0x6f,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0x56, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x67, 0x42,
	0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x74,
	0x67, 0x5f, 0x62, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x67, 0x42, 0x6f, 0x74, 0x52, 0x06, 0x74,
	0x67, 0x42, 0x6f, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0x9e, 0x02, 0x0a, 0x0c,
	0x54, 0x67, 0x42, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x67, 0x42, 0x6f, 0x74, 0x1a, 0x13, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x67, 0x42, 0x6f, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x35, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x13, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72,
	0x49, 0x64, 0x1a, 0x0f, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x67,
	0x42, 0x6f, 0x74, 0x12, 0x47, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x1d, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54,
	0x67, 0x42, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x67,
	0x42, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x17, 0x5a, 0x15,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tg_bot_service_proto_rawDescOnce sync.Once
	file_tg_bot_service_proto_rawDescData = file_tg_bot_service_proto_rawDesc
)

func file_tg_bot_service_proto_rawDescGZIP() []byte {
	file_tg_bot_service_proto_rawDescOnce.Do(func() {
		file_tg_bot_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tg_bot_service_proto_rawDescData)
	})
	return file_tg_bot_service_proto_rawDescData
}

var file_tg_bot_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tg_bot_service_proto_goTypes = []interface{}{
	(*GetAllTgBotsRequest)(nil),  // 0: genproto.GetAllTgBotsRequest
	(*GetAllTgBotsResponse)(nil), // 1: genproto.GetAllTgBotsResponse
	(*TgBot)(nil),                // 2: genproto.TgBot
	(*ShipperId)(nil),            // 3: genproto.ShipperId
	(*empty.Empty)(nil),          // 4: google.protobuf.Empty
}
var file_tg_bot_service_proto_depIdxs = []int32{
	2, // 0: genproto.GetAllTgBotsResponse.tg_bots:type_name -> genproto.TgBot
	2, // 1: genproto.TgBotService.Create:input_type -> genproto.TgBot
	2, // 2: genproto.TgBotService.Update:input_type -> genproto.TgBot
	3, // 3: genproto.TgBotService.Delete:input_type -> genproto.ShipperId
	3, // 4: genproto.TgBotService.Get:input_type -> genproto.ShipperId
	0, // 5: genproto.TgBotService.GetAll:input_type -> genproto.GetAllTgBotsRequest
	3, // 6: genproto.TgBotService.Create:output_type -> genproto.ShipperId
	4, // 7: genproto.TgBotService.Update:output_type -> google.protobuf.Empty
	4, // 8: genproto.TgBotService.Delete:output_type -> google.protobuf.Empty
	2, // 9: genproto.TgBotService.Get:output_type -> genproto.TgBot
	1, // 10: genproto.TgBotService.GetAll:output_type -> genproto.GetAllTgBotsResponse
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_tg_bot_service_proto_init() }
func file_tg_bot_service_proto_init() {
	if File_tg_bot_service_proto != nil {
		return
	}
	file_tg_bot_proto_init()
	file_shipper_service_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tg_bot_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTgBotsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tg_bot_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTgBotsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tg_bot_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tg_bot_service_proto_goTypes,
		DependencyIndexes: file_tg_bot_service_proto_depIdxs,
		MessageInfos:      file_tg_bot_service_proto_msgTypes,
	}.Build()
	File_tg_bot_service_proto = out.File
	file_tg_bot_service_proto_rawDesc = nil
	file_tg_bot_service_proto_goTypes = nil
	file_tg_bot_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TgBotServiceClient is the client API for TgBotService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TgBotServiceClient interface {
	Create(ctx context.Context, in *TgBot, opts ...grpc.CallOption) (*ShipperId, error)
	Update(ctx context.Context, in *TgBot, opts ...grpc.CallOption) (*empty.Empty, error)
	Delete(ctx context.Context, in *ShipperId, opts ...grpc.CallOption) (*empty.Empty, error)
	Get(ctx context.Context, in *ShipperId, opts ...grpc.CallOption) (*TgBot, error)
	GetAll(ctx context.Context, in *GetAllTgBotsRequest, opts ...grpc.CallOption) (*GetAllTgBotsResponse, error)
}

type tgBotServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTgBotServiceClient(cc grpc.ClientConnInterface) TgBotServiceClient {
	return &tgBotServiceClient{cc}
}

func (c *tgBotServiceClient) Create(ctx context.Context, in *TgBot, opts ...grpc.CallOption) (*ShipperId, error) {
	out := new(ShipperId)
	err := c.cc.Invoke(ctx, "/genproto.TgBotService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tgBotServiceClient) Update(ctx context.Context, in *TgBot, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.TgBotService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tgBotServiceClient) Delete(ctx context.Context, in *ShipperId, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.TgBotService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tgBotServiceClient) Get(ctx context.Context, in *ShipperId, opts ...grpc.CallOption) (*TgBot, error) {
	out := new(TgBot)
	err := c.cc.Invoke(ctx, "/genproto.TgBotService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tgBotServiceClient) GetAll(ctx context.Context, in *GetAllTgBotsRequest, opts ...grpc.CallOption) (*GetAllTgBotsResponse, error) {
	out := new(GetAllTgBotsResponse)
	err := c.cc.Invoke(ctx, "/genproto.TgBotService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TgBotServiceServer is the server API for TgBotService service.
type TgBotServiceServer interface {
	Create(context.Context, *TgBot) (*ShipperId, error)
	Update(context.Context, *TgBot) (*empty.Empty, error)
	Delete(context.Context, *ShipperId) (*empty.Empty, error)
	Get(context.Context, *ShipperId) (*TgBot, error)
	GetAll(context.Context, *GetAllTgBotsRequest) (*GetAllTgBotsResponse, error)
}

// UnimplementedTgBotServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTgBotServiceServer struct {
}

func (*UnimplementedTgBotServiceServer) Create(context.Context, *TgBot) (*ShipperId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedTgBotServiceServer) Update(context.Context, *TgBot) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedTgBotServiceServer) Delete(context.Context, *ShipperId) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedTgBotServiceServer) Get(context.Context, *ShipperId) (*TgBot, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedTgBotServiceServer) GetAll(context.Context, *GetAllTgBotsRequest) (*GetAllTgBotsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}

func RegisterTgBotServiceServer(s *grpc.Server, srv TgBotServiceServer) {
	s.RegisterService(&_TgBotService_serviceDesc, srv)
}

func _TgBotService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TgBot)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TgBotServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.TgBotService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TgBotServiceServer).Create(ctx, req.(*TgBot))
	}
	return interceptor(ctx, in, info, handler)
}

func _TgBotService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TgBot)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TgBotServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.TgBotService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TgBotServiceServer).Update(ctx, req.(*TgBot))
	}
	return interceptor(ctx, in, info, handler)
}

func _TgBotService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShipperId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TgBotServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.TgBotService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TgBotServiceServer).Delete(ctx, req.(*ShipperId))
	}
	return interceptor(ctx, in, info, handler)
}

func _TgBotService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShipperId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TgBotServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.TgBotService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TgBotServiceServer).Get(ctx, req.(*ShipperId))
	}
	return interceptor(ctx, in, info, handler)
}

func _TgBotService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllTgBotsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TgBotServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.TgBotService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TgBotServiceServer).GetAll(ctx, req.(*GetAllTgBotsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TgBotService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.TgBotService",
	HandlerType: (*TgBotServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _TgBotService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _TgBotService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _TgBotService_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _TgBotService_Get_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _TgBotService_GetAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tg_bot_service.proto",
}
