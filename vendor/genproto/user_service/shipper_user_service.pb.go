// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: shipper_user_service.proto

package user_service

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChangePasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *ChangePasswordRequest) Reset() {
	*x = ChangePasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_user_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordRequest) ProtoMessage() {}

func (x *ChangePasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_user_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordRequest.ProtoReflect.Descriptor instead.
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) {
	return file_shipper_user_service_proto_rawDescGZIP(), []int{0}
}

func (x *ChangePasswordRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChangePasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ShipperUserId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ShipperUserId) Reset() {
	*x = ShipperUserId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_user_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShipperUserId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShipperUserId) ProtoMessage() {}

func (x *ShipperUserId) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_user_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShipperUserId.ProtoReflect.Descriptor instead.
func (*ShipperUserId) Descriptor() ([]byte, []int) {
	return file_shipper_user_service_proto_rawDescGZIP(), []int{1}
}

func (x *ShipperUserId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetShipperUserByUsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShipperId string `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *GetShipperUserByUsernameRequest) Reset() {
	*x = GetShipperUserByUsernameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_user_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShipperUserByUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShipperUserByUsernameRequest) ProtoMessage() {}

func (x *GetShipperUserByUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_user_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShipperUserByUsernameRequest.ProtoReflect.Descriptor instead.
func (*GetShipperUserByUsernameRequest) Descriptor() ([]byte, []int) {
	return file_shipper_user_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetShipperUserByUsernameRequest) GetShipperId() string {
	if x != nil {
		return x.ShipperId
	}
	return ""
}

func (x *GetShipperUserByUsernameRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GetByCredentialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShipperId string `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password  string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *GetByCredentialsRequest) Reset() {
	*x = GetByCredentialsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_user_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByCredentialsRequest) ProtoMessage() {}

func (x *GetByCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_user_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByCredentialsRequest.ProtoReflect.Descriptor instead.
func (*GetByCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_shipper_user_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetByCredentialsRequest) GetShipperId() string {
	if x != nil {
		return x.ShipperId
	}
	return ""
}

func (x *GetByCredentialsRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetByCredentialsRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type GetAllShipperUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit      uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	ShipperId  string `protobuf:"bytes,3,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	UserRoleId string `protobuf:"bytes,4,opt,name=user_role_id,json=userRoleId,proto3" json:"user_role_id,omitempty"`
	Search     string `protobuf:"bytes,5,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *GetAllShipperUsersRequest) Reset() {
	*x = GetAllShipperUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_user_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllShipperUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllShipperUsersRequest) ProtoMessage() {}

func (x *GetAllShipperUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_user_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllShipperUsersRequest.ProtoReflect.Descriptor instead.
func (*GetAllShipperUsersRequest) Descriptor() ([]byte, []int) {
	return file_shipper_user_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetAllShipperUsersRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAllShipperUsersRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAllShipperUsersRequest) GetShipperId() string {
	if x != nil {
		return x.ShipperId
	}
	return ""
}

func (x *GetAllShipperUsersRequest) GetUserRoleId() string {
	if x != nil {
		return x.UserRoleId
	}
	return ""
}

func (x *GetAllShipperUsersRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type GetAllShipperUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShipperUsers []*ShipperUser `protobuf:"bytes,1,rep,name=shipper_users,json=shipperUsers,proto3" json:"shipper_users,omitempty"`
	Count        uint64         `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetAllShipperUsersResponse) Reset() {
	*x = GetAllShipperUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_user_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllShipperUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllShipperUsersResponse) ProtoMessage() {}

func (x *GetAllShipperUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_user_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllShipperUsersResponse.ProtoReflect.Descriptor instead.
func (*GetAllShipperUsersResponse) Descriptor() ([]byte, []int) {
	return file_shipper_user_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllShipperUsersResponse) GetShipperUsers() []*ShipperUser {
	if x != nil {
		return x.ShipperUsers
	}
	return nil
}

func (x *GetAllShipperUsersResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DeleteShipperUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ShipperId string `protobuf:"bytes,2,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
}

func (x *DeleteShipperUserRequest) Reset() {
	*x = DeleteShipperUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_user_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShipperUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShipperUserRequest) ProtoMessage() {}

func (x *DeleteShipperUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_user_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShipperUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteShipperUserRequest) Descriptor() ([]byte, []int) {
	return file_shipper_user_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteShipperUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteShipperUserRequest) GetShipperId() string {
	if x != nil {
		return x.ShipperId
	}
	return ""
}

var File_shipper_user_service_proto protoreflect.FileDescriptor

var file_shipper_user_service_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x43, 0x0a, 0x15, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0x1f, 0x0a, 0x0d, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x5c, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x70,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x69,
	0x70, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0x9e, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x69, 0x70,
	0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x22, 0x6e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0c, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x49, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x32, 0xa6, 0x05, 0x0a,
	0x12, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x1a, 0x17, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x00, 0x12,
	0x37, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a,
	0x15, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x12, 0x23, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x39, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x06, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x53, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x29, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x21, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x2e, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x17, 0x5a, 0x15, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shipper_user_service_proto_rawDescOnce sync.Once
	file_shipper_user_service_proto_rawDescData = file_shipper_user_service_proto_rawDesc
)

func file_shipper_user_service_proto_rawDescGZIP() []byte {
	file_shipper_user_service_proto_rawDescOnce.Do(func() {
		file_shipper_user_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_shipper_user_service_proto_rawDescData)
	})
	return file_shipper_user_service_proto_rawDescData
}

var file_shipper_user_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_shipper_user_service_proto_goTypes = []interface{}{
	(*ChangePasswordRequest)(nil),           // 0: genproto.ChangePasswordRequest
	(*ShipperUserId)(nil),                   // 1: genproto.ShipperUserId
	(*GetShipperUserByUsernameRequest)(nil), // 2: genproto.GetShipperUserByUsernameRequest
	(*GetByCredentialsRequest)(nil),         // 3: genproto.GetByCredentialsRequest
	(*GetAllShipperUsersRequest)(nil),       // 4: genproto.GetAllShipperUsersRequest
	(*GetAllShipperUsersResponse)(nil),      // 5: genproto.GetAllShipperUsersResponse
	(*DeleteShipperUserRequest)(nil),        // 6: genproto.DeleteShipperUserRequest
	(*ShipperUser)(nil),                     // 7: genproto.ShipperUser
	(*GetAllPhonesRequest)(nil),             // 8: genproto.GetAllPhonesRequest
	(*empty.Empty)(nil),                     // 9: google.protobuf.Empty
	(*GetAllPhonesResponse)(nil),            // 10: genproto.GetAllPhonesResponse
}
var file_shipper_user_service_proto_depIdxs = []int32{
	7,  // 0: genproto.GetAllShipperUsersResponse.shipper_users:type_name -> genproto.ShipperUser
	7,  // 1: genproto.ShipperUserService.Create:input_type -> genproto.ShipperUser
	1,  // 2: genproto.ShipperUserService.Get:input_type -> genproto.ShipperUserId
	4,  // 3: genproto.ShipperUserService.GetAll:input_type -> genproto.GetAllShipperUsersRequest
	7,  // 4: genproto.ShipperUserService.Update:input_type -> genproto.ShipperUser
	6,  // 5: genproto.ShipperUserService.Delete:input_type -> genproto.DeleteShipperUserRequest
	2,  // 6: genproto.ShipperUserService.GetByUsername:input_type -> genproto.GetShipperUserByUsernameRequest
	3,  // 7: genproto.ShipperUserService.GetByCredentials:input_type -> genproto.GetByCredentialsRequest
	0,  // 8: genproto.ShipperUserService.ChangePassword:input_type -> genproto.ChangePasswordRequest
	8,  // 9: genproto.ShipperUserService.GetAllPhones:input_type -> genproto.GetAllPhonesRequest
	1,  // 10: genproto.ShipperUserService.Create:output_type -> genproto.ShipperUserId
	7,  // 11: genproto.ShipperUserService.Get:output_type -> genproto.ShipperUser
	5,  // 12: genproto.ShipperUserService.GetAll:output_type -> genproto.GetAllShipperUsersResponse
	9,  // 13: genproto.ShipperUserService.Update:output_type -> google.protobuf.Empty
	9,  // 14: genproto.ShipperUserService.Delete:output_type -> google.protobuf.Empty
	7,  // 15: genproto.ShipperUserService.GetByUsername:output_type -> genproto.ShipperUser
	7,  // 16: genproto.ShipperUserService.GetByCredentials:output_type -> genproto.ShipperUser
	9,  // 17: genproto.ShipperUserService.ChangePassword:output_type -> google.protobuf.Empty
	10, // 18: genproto.ShipperUserService.GetAllPhones:output_type -> genproto.GetAllPhonesResponse
	10, // [10:19] is the sub-list for method output_type
	1,  // [1:10] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_shipper_user_service_proto_init() }
func file_shipper_user_service_proto_init() {
	if File_shipper_user_service_proto != nil {
		return
	}
	file_shipper_user_proto_init()
	file_branch_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_shipper_user_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipper_user_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShipperUserId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipper_user_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShipperUserByUsernameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipper_user_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByCredentialsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipper_user_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllShipperUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipper_user_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllShipperUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipper_user_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteShipperUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shipper_user_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shipper_user_service_proto_goTypes,
		DependencyIndexes: file_shipper_user_service_proto_depIdxs,
		MessageInfos:      file_shipper_user_service_proto_msgTypes,
	}.Build()
	File_shipper_user_service_proto = out.File
	file_shipper_user_service_proto_rawDesc = nil
	file_shipper_user_service_proto_goTypes = nil
	file_shipper_user_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ShipperUserServiceClient is the client API for ShipperUserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShipperUserServiceClient interface {
	Create(ctx context.Context, in *ShipperUser, opts ...grpc.CallOption) (*ShipperUserId, error)
	Get(ctx context.Context, in *ShipperUserId, opts ...grpc.CallOption) (*ShipperUser, error)
	GetAll(ctx context.Context, in *GetAllShipperUsersRequest, opts ...grpc.CallOption) (*GetAllShipperUsersResponse, error)
	Update(ctx context.Context, in *ShipperUser, opts ...grpc.CallOption) (*empty.Empty, error)
	Delete(ctx context.Context, in *DeleteShipperUserRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetByUsername(ctx context.Context, in *GetShipperUserByUsernameRequest, opts ...grpc.CallOption) (*ShipperUser, error)
	GetByCredentials(ctx context.Context, in *GetByCredentialsRequest, opts ...grpc.CallOption) (*ShipperUser, error)
	ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetAllPhones(ctx context.Context, in *GetAllPhonesRequest, opts ...grpc.CallOption) (*GetAllPhonesResponse, error)
}

type shipperUserServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewShipperUserServiceClient(cc grpc.ClientConnInterface) ShipperUserServiceClient {
	return &shipperUserServiceClient{cc}
}

func (c *shipperUserServiceClient) Create(ctx context.Context, in *ShipperUser, opts ...grpc.CallOption) (*ShipperUserId, error) {
	out := new(ShipperUserId)
	err := c.cc.Invoke(ctx, "/genproto.ShipperUserService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperUserServiceClient) Get(ctx context.Context, in *ShipperUserId, opts ...grpc.CallOption) (*ShipperUser, error) {
	out := new(ShipperUser)
	err := c.cc.Invoke(ctx, "/genproto.ShipperUserService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperUserServiceClient) GetAll(ctx context.Context, in *GetAllShipperUsersRequest, opts ...grpc.CallOption) (*GetAllShipperUsersResponse, error) {
	out := new(GetAllShipperUsersResponse)
	err := c.cc.Invoke(ctx, "/genproto.ShipperUserService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperUserServiceClient) Update(ctx context.Context, in *ShipperUser, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.ShipperUserService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperUserServiceClient) Delete(ctx context.Context, in *DeleteShipperUserRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.ShipperUserService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperUserServiceClient) GetByUsername(ctx context.Context, in *GetShipperUserByUsernameRequest, opts ...grpc.CallOption) (*ShipperUser, error) {
	out := new(ShipperUser)
	err := c.cc.Invoke(ctx, "/genproto.ShipperUserService/GetByUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperUserServiceClient) GetByCredentials(ctx context.Context, in *GetByCredentialsRequest, opts ...grpc.CallOption) (*ShipperUser, error) {
	out := new(ShipperUser)
	err := c.cc.Invoke(ctx, "/genproto.ShipperUserService/GetByCredentials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperUserServiceClient) ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.ShipperUserService/ChangePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperUserServiceClient) GetAllPhones(ctx context.Context, in *GetAllPhonesRequest, opts ...grpc.CallOption) (*GetAllPhonesResponse, error) {
	out := new(GetAllPhonesResponse)
	err := c.cc.Invoke(ctx, "/genproto.ShipperUserService/GetAllPhones", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShipperUserServiceServer is the server API for ShipperUserService service.
type ShipperUserServiceServer interface {
	Create(context.Context, *ShipperUser) (*ShipperUserId, error)
	Get(context.Context, *ShipperUserId) (*ShipperUser, error)
	GetAll(context.Context, *GetAllShipperUsersRequest) (*GetAllShipperUsersResponse, error)
	Update(context.Context, *ShipperUser) (*empty.Empty, error)
	Delete(context.Context, *DeleteShipperUserRequest) (*empty.Empty, error)
	GetByUsername(context.Context, *GetShipperUserByUsernameRequest) (*ShipperUser, error)
	GetByCredentials(context.Context, *GetByCredentialsRequest) (*ShipperUser, error)
	ChangePassword(context.Context, *ChangePasswordRequest) (*empty.Empty, error)
	GetAllPhones(context.Context, *GetAllPhonesRequest) (*GetAllPhonesResponse, error)
}

// UnimplementedShipperUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedShipperUserServiceServer struct {
}

func (*UnimplementedShipperUserServiceServer) Create(context.Context, *ShipperUser) (*ShipperUserId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedShipperUserServiceServer) Get(context.Context, *ShipperUserId) (*ShipperUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedShipperUserServiceServer) GetAll(context.Context, *GetAllShipperUsersRequest) (*GetAllShipperUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedShipperUserServiceServer) Update(context.Context, *ShipperUser) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedShipperUserServiceServer) Delete(context.Context, *DeleteShipperUserRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedShipperUserServiceServer) GetByUsername(context.Context, *GetShipperUserByUsernameRequest) (*ShipperUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByUsername not implemented")
}
func (*UnimplementedShipperUserServiceServer) GetByCredentials(context.Context, *GetByCredentialsRequest) (*ShipperUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByCredentials not implemented")
}
func (*UnimplementedShipperUserServiceServer) ChangePassword(context.Context, *ChangePasswordRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangePassword not implemented")
}
func (*UnimplementedShipperUserServiceServer) GetAllPhones(context.Context, *GetAllPhonesRequest) (*GetAllPhonesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllPhones not implemented")
}

func RegisterShipperUserServiceServer(s *grpc.Server, srv ShipperUserServiceServer) {
	s.RegisterService(&_ShipperUserService_serviceDesc, srv)
}

func _ShipperUserService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShipperUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperUserServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperUserService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperUserServiceServer).Create(ctx, req.(*ShipperUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperUserService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShipperUserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperUserServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperUserService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperUserServiceServer).Get(ctx, req.(*ShipperUserId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperUserService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllShipperUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperUserServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperUserService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperUserServiceServer).GetAll(ctx, req.(*GetAllShipperUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperUserService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShipperUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperUserServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperUserService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperUserServiceServer).Update(ctx, req.(*ShipperUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperUserService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteShipperUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperUserServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperUserService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperUserServiceServer).Delete(ctx, req.(*DeleteShipperUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperUserService_GetByUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShipperUserByUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperUserServiceServer).GetByUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperUserService/GetByUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperUserServiceServer).GetByUsername(ctx, req.(*GetShipperUserByUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperUserService_GetByCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByCredentialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperUserServiceServer).GetByCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperUserService/GetByCredentials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperUserServiceServer).GetByCredentials(ctx, req.(*GetByCredentialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperUserService_ChangePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperUserServiceServer).ChangePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperUserService/ChangePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperUserServiceServer).ChangePassword(ctx, req.(*ChangePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperUserService_GetAllPhones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllPhonesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperUserServiceServer).GetAllPhones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperUserService/GetAllPhones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperUserServiceServer).GetAllPhones(ctx, req.(*GetAllPhonesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShipperUserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.ShipperUserService",
	HandlerType: (*ShipperUserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ShipperUserService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ShipperUserService_Get_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _ShipperUserService_GetAll_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ShipperUserService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ShipperUserService_Delete_Handler,
		},
		{
			MethodName: "GetByUsername",
			Handler:    _ShipperUserService_GetByUsername_Handler,
		},
		{
			MethodName: "GetByCredentials",
			Handler:    _ShipperUserService_GetByCredentials_Handler,
		},
		{
			MethodName: "ChangePassword",
			Handler:    _ShipperUserService_ChangePassword_Handler,
		},
		{
			MethodName: "GetAllPhones",
			Handler:    _ShipperUserService_GetAllPhones_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shipper_user_service.proto",
}
